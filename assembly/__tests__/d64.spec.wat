(module
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_i64_i32_=>_i32 (func (param i32 i64 i32) (result i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 f64) (result i32)))
 (type $i64_i64_i32_i32_=>_i32 (func (param i64 i64 i32 i32) (result i32)))
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (type $i64_=>_none (func (param i64)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $i32_i64_i32_i32_=>_i32 (func (param i32 i64 i32 i32) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "__aspect" "createReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (import "__aspect" "attachStackTraceToReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue (param i32)))
 (import "__aspect" "reportActualReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue (param i32)))
 (import "__aspect" "reportExpectedReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue (param i32 i32)))
 (import "__aspect" "clearActual" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual))
 (import "__aspect" "clearExpected" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected))
 (import "__aspect" "reportTestTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/test (param i32 i32)))
 (import "__aspect" "reportGroupTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/describe (param i32 i32)))
 (import "__aspect" "pushReflectedObjectKey" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey (param i32 i32)))
 (import "__aspect" "createReflectedLong" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedLong (param i32 i32 i32 i32 i32 i32) (result i32)))
 (import "__aspect" "pushReflectedObjectValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue (param i32 i32)))
 (import "__aspect" "createReflectedNumber" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber (param i32 i32 i32 i32 f64) (result i32)))
 (import "__aspect" "reportExpectedTruthy" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedTruthy (param i32)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (global $~lib/as-big/assembly/Big/Big.PE (mut i32) (i32.const 21))
 (global $~lib/as-big/assembly/Big/Big.NE (mut i32) (i32.const -7))
 (global $~lib/as-big/assembly/Big/Big.DP (mut i32) (i32.const 20))
 (global $~lib/as-big/assembly/Big/Big.MAX_DP i32 (i32.const 1000000))
 (global $~lib/as-big/assembly/Big/Big.MAX_POWER i32 (i32.const 1000000))
 (global $~lib/as-big/assembly/Big/Big.RM (mut i32) (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH i32 (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH i32 (i32.const 1))
 (global $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.DEFER_MATCH i32 (i32.const 2))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/util/math/log_tail (mut f64) (f64.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/as-big/assembly/Big/Big.ZERO (mut i32) (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/noOp/noOp i32 (i32.const 25344))
 (global $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 25488))
 (global $~lib/memory/__data_end i32 (i32.const 25636))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 42020))
 (global $~lib/memory/__heap_base i32 (i32.const 42020))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00T\00e\00s\00t\00 \00t\00o\00o\00l\00i\00n\00g\00\00\00\00\00")
 (data (i32.const 60) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00r\00e\00m\00o\00v\00e\00T\00r\00a\00i\00l\00i\00n\00g\00")
 (data (i32.const 108) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00.\009\003\006\00\00\00\00\00")
 (data (i32.const 172) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 204) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 268) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 336) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 368) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 396) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 460) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 512) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 540) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 604) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 636) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 668) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 700) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 764) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 812) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 860) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 924) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00c\00a\00c\00h\00e\00L\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00v\00e\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1004) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00t\00\00\00n\00o\00d\00e\00_\00m\00o\00d\00u\00l\00e\00s\00/\00@\00a\00s\00-\00p\00e\00c\00t\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00a\00s\00s\00e\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1148) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1180) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1212) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\002\00\00\00S\00e\00r\00i\00a\00l\00i\00z\00e\00s\00 \00t\00o\00 \00s\00a\00m\00e\00 \00v\00a\00l\00u\00e\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1292) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00.\009\003\000\00\00\00\00\00")
 (data (i32.const 1356) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00.\009\003\00\00\00\00\00\00\00")
 (data (i32.const 1420) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00.\009\000\000\00\00\00\00\00")
 (data (i32.const 1484) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00.\009\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1548) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00.\000\000\000\00\00\00\00\00")
 (data (i32.const 1612) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\006\005\000\003\006\002\000\002\001\000\000\002\008\009\007\005\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1676) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1708) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1740) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00B\00l\00a\00c\00k\00b\00o\00x\00 \00t\00e\00s\00t\00s\00")
 (data (i32.const 1788) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00s\00t\00r\00i\00n\00g\00i\00f\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1836) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 1868) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 2460) "\1c\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3516) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 3616) "\00\00\00\00\00\a0\f6?\00\00\00\00\00\00\00\00\00\c8\b9\f2\82,\d6\bf\80V7($\b4\fa<\00\00\00\00\00\80\f6?\00\00\00\00\00\00\00\00\00\08X\bf\bd\d1\d5\bf \f7\e0\d8\08\a5\1c\bd\00\00\00\00\00`\f6?\00\00\00\00\00\00\00\00\00XE\17wv\d5\bfmP\b6\d5\a4b#\bd\00\00\00\00\00@\f6?\00\00\00\00\00\00\00\00\00\f8-\87\ad\1a\d5\bf\d5g\b0\9e\e4\84\e6\bc\00\00\00\00\00 \f6?\00\00\00\00\00\00\00\00\00xw\95_\be\d4\bf\e0>)\93i\1b\04\bd\00\00\00\00\00\00\f6?\00\00\00\00\00\00\00\00\00`\1c\c2\8ba\d4\bf\cc\84LH/\d8\13=\00\00\00\00\00\e0\f5?\00\00\00\00\00\00\00\00\00\a8\86\860\04\d4\bf:\0b\82\ed\f3B\dc<\00\00\00\00\00\c0\f5?\00\00\00\00\00\00\00\00\00HiUL\a6\d3\bf`\94Q\86\c6\b1 =\00\00\00\00\00\a0\f5?\00\00\00\00\00\00\00\00\00\80\98\9a\ddG\d3\bf\92\80\c5\d4MY%=\00\00\00\00\00\80\f5?\00\00\00\00\00\00\00\00\00 \e1\ba\e2\e8\d2\bf\d8+\b7\99\1e{&=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00@\f5?\00\00\00\00\00\00\00\00\00x\cf\fbA)\d2\bfv\daS($Z\16\bd\00\00\00\00\00 \f5?\00\00\00\00\00\00\00\00\00\98i\c1\98\c8\d1\bf\04T\e7h\bc\af\1f\bd\00\00\00\00\00\00\f5?\00\00\00\00\00\00\00\00\00\a8\ab\ab\\g\d1\bf\f0\a8\823\c6\1f\1f=\00\00\00\00\00\e0\f4?\00\00\00\00\00\00\00\00\00H\ae\f9\8b\05\d1\bffZ\05\fd\c4\a8&\bd\00\00\00\00\00\c0\f4?\00\00\00\00\00\00\00\00\00\90s\e2$\a3\d0\bf\0e\03\f4~\eek\0c\bd\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\80\f4?\00\00\00\00\00\00\00\00\00@^m\18\b9\cf\bf\87<\99\ab*W\0d=\00\00\00\00\00`\f4?\00\00\00\00\00\00\00\00\00`\dc\cb\ad\f0\ce\bf$\af\86\9c\b7&+=\00\00\00\00\00@\f4?\00\00\00\00\00\00\00\00\00\f0*n\07\'\ce\bf\10\ff?TO/\17\bd\00\00\00\00\00 \f4?\00\00\00\00\00\00\00\00\00\c0Ok!\\\cd\bf\1bh\ca\bb\91\ba!=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\e0\f3?\00\00\00\00\00\00\00\00\00\90-t\86\c2\cb\bf\8f\b7\8b1\b0N\19=\00\00\00\00\00\c0\f3?\00\00\00\00\00\00\00\00\00\c0\80N\c9\f3\ca\bff\90\cd?cN\ba<\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\80\f3?\00\00\00\00\00\00\00\00\00P\f4\9cZR\c9\bf\e3\d4\c1\04\d9\d1*\bd\00\00\00\00\00`\f3?\00\00\00\00\00\00\00\00\00\d0 e\a0\7f\c8\bf\t\fa\db\7f\bf\bd+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00 \f3?\00\00\00\00\00\00\00\00\00\d0\19\e7\0f\d6\c6\bff\e2\b2\a3j\e4\10\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\e0\f2?\00\00\00\00\00\00\00\00\00\b0\a1\e3\e5&\c5\bf\8f[\07\90\8b\de \bd\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\a0\f2?\00\00\00\00\00\00\00\00\00\90\1e \fcq\c3\bf:T\'M\86x\f1<\00\00\00\00\00\80\f2?\00\00\00\00\00\00\00\00\00\f0\1f\f8R\95\c2\bf\08\c4q\170\8d$\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00 \f2?\00\00\00\00\00\00\00\00\00\e0\db1\91\ec\bf\bf\f23\a3\\Tu%\bd\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\e0\f1?\00\00\00\00\00\00\00\00\00\c0[\8fT^\bc\bf\06\be_XW\0c\1d\bd\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\80\f1?\00\00\00\00\00\00\00\00\00`\e5\8a\d2\f0\b6\bf\das3\c97\97&\bd\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00 \f1?\00\00\00\00\00\00\00\00\00\80\a3\ee6e\b1\bf\t\a3\8fv^|\14=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00`\f0?\00\00\00\00\00\00\00\00\00\80\d5\07\1b\b9\97\bf9\a6\fa\93T\8d(\bd\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\0d?\e2\19\bd\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\0d?\e2\19\bd\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ef?\00\00\00\00\00\00\00\00\00\00\89u\15\10\80?\e8+\9d\99k\c7\10\bd\00\00\00\00\00\80\ef?\00\00\00\00\00\00\00\00\00\80\93XV \90?\d2\f7\e2\06[\dc#\bd\00\00\00\00\00@\ef?\00\00\00\00\00\00\00\00\00\00\c9(%I\98?4\0cZ2\ba\a0*\bd\00\00\00\00\00\00\ef?\00\00\00\00\00\00\00\00\00@\e7\89]A\a0?S\d7\f1\\\c0\11\01=\00\00\00\00\00\c0\ee?\00\00\00\00\00\00\00\00\00\00.\d4\aef\a4?(\fd\bdus\16,\bd\00\00\00\00\00\80\ee?\00\00\00\00\00\00\00\00\00\c0\9f\14\aa\94\a8?}&Z\d0\95y\19\bd\00\00\00\00\00@\ee?\00\00\00\00\00\00\00\00\00\c0\dd\cds\cb\ac?\07(\d8G\f2h\1a\bd\00\00\00\00\00 \ee?\00\00\00\00\00\00\00\00\00\c0\06\c01\ea\ae?{;\c9O>\11\0e\bd\00\00\00\00\00\e0\ed?\00\00\00\00\00\00\00\00\00`F\d1;\97\b1?\9b\9e\0dV]2%\bd\00\00\00\00\00\a0\ed?\00\00\00\00\00\00\00\00\00\e0\d1\a7\f5\bd\b3?\d7N\db\a5^\c8,=\00\00\00\00\00`\ed?\00\00\00\00\00\00\00\00\00\a0\97MZ\e9\b5?\1e\1d]<\06i,\bd\00\00\00\00\00@\ed?\00\00\00\00\00\00\00\00\00\c0\ea\n\d3\00\b7?2\ed\9d\a9\8d\1e\ec<\00\00\00\00\00\00\ed?\00\00\00\00\00\00\00\00\00@Y]^3\b9?\daG\bd:\\\11#=\00\00\00\00\00\c0\ec?\00\00\00\00\00\00\00\00\00`\ad\8d\c8j\bb?\e5h\f7+\80\90\13\bd\00\00\00\00\00\a0\ec?\00\00\00\00\00\00\00\00\00@\bc\01X\88\bc?\d3\acZ\c6\d1F&=\00\00\00\00\00`\ec?\00\00\00\00\00\00\00\00\00 \n\839\c7\be?\e0E\e6\afh\c0-\bd\00\00\00\00\00@\ec?\00\00\00\00\00\00\00\00\00\e0\db9\91\e8\bf?\fd\n\a1O\d64%\bd\00\00\00\00\00\00\ec?\00\00\00\00\00\00\00\00\00\e0\'\82\8e\17\c1?\f2\07-\cex\ef!=\00\00\00\00\00\e0\eb?\00\00\00\00\00\00\00\00\00\f0#~+\aa\c1?4\998D\8e\a7,=\00\00\00\00\00\a0\eb?\00\00\00\00\00\00\00\00\00\80\86\0ca\d1\c2?\a1\b4\81\cbl\9d\03=\00\00\00\00\00\80\eb?\00\00\00\00\00\00\00\00\00\90\15\b0\fce\c3?\89rK#\a8/\c6<\00\00\00\00\00@\eb?\00\00\00\00\00\00\00\00\00\b03\83=\91\c4?x\b6\fdTy\83%=\00\00\00\00\00 \eb?\00\00\00\00\00\00\00\00\00\b0\a1\e4\e5\'\c5?\c7}i\e5\e83&=\00\00\00\00\00\e0\ea?\00\00\00\00\00\00\00\00\00\10\8c\beNW\c6?x.<,\8b\cf\19=\00\00\00\00\00\c0\ea?\00\00\00\00\00\00\00\00\00pu\8b\12\f0\c6?\e1!\9c\e5\8d\11%\bd\00\00\00\00\00\a0\ea?\00\00\00\00\00\00\00\00\00PD\85\8d\89\c7?\05C\91p\10f\1c\bd\00\00\00\00\00`\ea?\00\00\00\00\00\00\00\00\00\009\eb\af\be\c8?\d1,\e9\aaT=\07\bd\00\00\00\00\00@\ea?\00\00\00\00\00\00\00\00\00\00\f7\dcZZ\c9?o\ff\a0X(\f2\07=\00\00\00\00\00\00\ea?\00\00\00\00\00\00\00\00\00\e0\8a<\ed\93\ca?i!VPCr(\bd\00\00\00\00\00\e0\e9?\00\00\00\00\00\00\00\00\00\d0[W\d81\cb?\aa\e1\acN\8d5\0c\bd\00\00\00\00\00\c0\e9?\00\00\00\00\00\00\00\00\00\e0;8\87\d0\cb?\b6\12TY\c4K-\bd\00\00\00\00\00\a0\e9?\00\00\00\00\00\00\00\00\00\10\f0\c6\fbo\cc?\d2+\96\c5r\ec\f1\bc\00\00\00\00\00`\e9?\00\00\00\00\00\00\00\00\00\90\d4\b0=\b1\cd?5\b0\15\f7*\ff*\bd\00\00\00\00\00@\e9?\00\00\00\00\00\00\00\00\00\10\e7\ff\0eS\ce?0\f4A`\'\12\c2<\00\00\00\00\00 \e9?\00\00\00\00\00\00\00\00\00\00\dd\e4\ad\f5\ce?\11\8e\bbe\15!\ca\bc\00\00\00\00\00\00\e9?\00\00\00\00\00\00\00\00\00\b0\b3l\1c\99\cf?0\df\0c\ca\ec\cb\1b=\00\00\00\00\00\c0\e8?\00\00\00\00\00\00\00\00\00XM`8q\d0?\91N\ed\16\db\9c\f8<\00\00\00\00\00\a0\e8?\00\00\00\00\00\00\00\00\00`ag-\c4\d0?\e9\ea<\16\8b\18\'=\00\00\00\00\00\80\e8?\00\00\00\00\00\00\00\00\00\e8\'\82\8e\17\d1?\1c\f0\a5c\0e!,\bd\00\00\00\00\00`\e8?\00\00\00\00\00\00\00\00\00\f8\ac\cb\\k\d1?\81\16\a5\f7\cd\9a+=\00\00\00\00\00@\e8?\00\00\00\00\00\00\00\00\00hZc\99\bf\d1?\b7\bdGQ\ed\a6,=\00\00\00\00\00 \e8?\00\00\00\00\00\00\00\00\00\b8\0emE\14\d2?\ea\baF\ba\de\87\n=\00\00\00\00\00\e0\e7?\00\00\00\00\00\00\00\00\00\90\dc|\f0\be\d2?\f4\04PJ\fa\9c*=\00\00\00\00\00\c0\e7?\00\00\00\00\00\00\00\00\00`\d3\e1\f1\14\d3?\b8<!\d3z\e2(\bd\00\00\00\00\00\a0\e7?\00\00\00\00\00\00\00\00\00\10\bevgk\d3?\c8w\f1\b0\cdn\11=\00\00\00\00\00\80\e7?\00\00\00\00\00\00\00\00\0003wR\c2\d3?\\\bd\06\b6T;\18=\00\00\00\00\00`\e7?\00\00\00\00\00\00\00\00\00\e8\d5#\b4\19\d4?\9d\e0\90\ec6\e4\08=\00\00\00\00\00@\e7?\00\00\00\00\00\00\00\00\00\c8q\c2\8dq\d4?u\d6g\t\ce\'/\bd\00\00\00\00\00 \e7?\00\00\00\00\00\00\00\00\000\17\9e\e0\c9\d4?\a4\d8\n\1b\89 .\bd\00\00\00\00\00\00\e7?\00\00\00\00\00\00\00\00\00\a08\07\ae\"\d5?Y\c7d\81p\be.=\00\00\00\00\00\e0\e6?\00\00\00\00\00\00\00\00\00\d0\c8S\f7{\d5?\ef@]\ee\ed\ad\1f=\00\00\00\00\00\c0\e6?\00\00\00\00\00\00\00\00\00`Y\df\bd\d5\d5?\dce\a4\08*\0b\n\bd")
 (data (i32.const 7712) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\\\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\\\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\"PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\tm\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\n\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\n\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\"4\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\n\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\tf\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<\'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\0d\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\\{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da\'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\tT\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\t\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\"U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\"^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\t^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T\'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\t\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\"CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?\'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\n\e15\d2m<##\e3\19c\c8\ee?c\"b\"\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\n\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\t\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\\2\e3\8e<z\d0\ff_\ab \ef?\acY\t\d1\8f\e0\84<K\d1W.\f1\'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\0d\90\bc\f2\89\0d\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\"@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\0dG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<\'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?")
 (data (i32.const 9772) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9804) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00D\006\004\00(\001\000\00,\00 \001\00)\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9852) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00D\006\004\00(\001\000\000\00,\00 \002\00)\00\00\00\00\00\00\00")
 (data (i32.const 9900) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\001\00.\000\001\00\00\00\00\00")
 (data (i32.const 9932) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00D\006\004\00(\001\000\001\00,\00 \002\00)\00\00\00\00\00\00\00")
 (data (i32.const 9980) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\001\000\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10012) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00D\006\004\00(\001\000\00,\00 \000\00)\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10060) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\004\004\003\007\001\002\003\005\008\006\006\005\001\008\003\006\008\000\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10124) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00D\006\004\00(\004\004\003\007\001\002\003\005\008\006\006\005\001\008\003\006\008\000\00,\00 \000\00)\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10204) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10236) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00c\00h\00a\00n\00g\00e\00P\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10300) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00n\00e\00w\00 \00D\006\004\00(\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10364) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10396) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00)\00.\00c\00h\00a\00n\00g\00e\00P\00r\00e\00c\00i\00s\00i\00o\00n\00(\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10460) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00)\00 \00=\00 \00D\006\004\00(\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10508) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00,\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 10540) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00)\00 \00g\00o\00t\00:\00 \00D\006\004\00(\00\00\00\00\00\00\00")
 (data (i32.const 10588) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00D\006\004\00\00\00\00\00\00\00")
 (data (i32.const 10652) "\1c\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10684) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00v\00a\00l\00u\00e\00\00\00")
 (data (i32.const 10716) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00u\006\004\00\00\00\00\00\00\00")
 (data (i32.const 10748) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10796) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00u\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10828) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00n\00o\00t\00A\00N\00u\00m\00b\00e\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10876) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00b\00o\00o\00l\00\00\00\00\00")
 (data (i32.const 10908) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 10956) "\1c\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10988) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 11036) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11068) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11100) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11132) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00")
 (data (i32.const 11196) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00w\00i\00t\00h\00 \00a\00 \00g\00r\00e\00a\00t\00e\00r\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11276) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00,\00\00\00w\00i\00t\00h\00 \00a\00 \00l\00o\00w\00e\00r\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00")
 (data (i32.const 11340) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00:\00\00\00w\00i\00t\00h\00 \00l\00o\00s\00s\00 \00i\00n\00 \00a\00s\00k\00e\00d\00 \00c\00o\00n\00v\00e\00r\00s\00i\00o\00n\00\00\00")
 (data (i32.const 11420) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00w\00i\00t\00h\00 \00o\00v\00e\00r\00f\00l\00o\00w\00\00\00")
 (data (i32.const 11468) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00o\00t\00h\00e\00r\00 \00o\00v\00e\00r\00f\00l\00o\00w\00")
 (data (i32.const 11516) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11548) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00e\00q\00u\00a\00l\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11596) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00V\00\00\00b\00e\00t\00w\00e\00e\00n\00 \00i\00d\00e\00n\00t\00i\00c\00a\00l\00 \00v\00a\00l\00u\00e\00 \00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00")
 (data (i32.const 11708) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00`\00\00\00b\00e\00t\00w\00e\00e\00n\00 \00i\00d\00e\00n\00t\00i\00c\00a\00l\00 \00v\00a\00l\00u\00e\00 \00w\00i\00t\00h\00 \00a\00 \00g\00r\00e\00a\00t\00e\00r\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11836) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00b\00e\00t\00w\00e\00e\00n\00 \00i\00d\00e\00n\00t\00i\00c\00a\00l\00 \00v\00a\00l\00u\00e\00 \00w\00i\00t\00h\00 \00a\00 \00l\00o\00w\00e\00r\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00")
 (data (i32.const 11948) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00b\00e\00t\00w\00e\00e\00n\00 \00a\00 \00N\00a\00N\00 \00a\00n\00d\00 \00a\00 \00n\00u\00m\00b\00e\00r\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12028) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00b\00e\00t\00w\00e\00e\00n\00 \00t\00w\00o\00 \00N\00a\00N\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12092) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12124) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\008\00\00\00c\00o\00m\00p\00a\00r\00i\00n\00g\00 \00(\00g\00t\00,\00 \00g\00t\00e\00,\00 \00l\00t\00,\00 \00l\00t\00e\00)\00\00\00\00\00")
 (data (i32.const 12204) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00l\00o\00w\00e\00r\00 \00t\00h\00a\00n\00 \00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00")
 (data (i32.const 12284) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00@\00\00\00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12380) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00N\00\00\00l\00o\00w\00e\00r\00 \00t\00h\00a\00n\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12492) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00R\00\00\00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12604) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00F\00\00\00l\00o\00w\00e\00r\00 \00t\00h\00a\00n\00 \00w\00i\00t\00h\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00")
 (data (i32.const 12700) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00J\00\00\00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00w\00i\00t\00h\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00")
 (data (i32.const 12796) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00X\00\00\00l\00o\00w\00e\00r\00 \00t\00h\00a\00n\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00")
 (data (i32.const 12908) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\\\00\00\00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00")
 (data (i32.const 13020) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\008\00\00\00l\00o\00w\00e\00r\00 \00t\00h\00a\00n\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00N\00a\00N\00\00\00\00\00")
 (data (i32.const 13100) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00o\00r\00 \00e\00q\00u\00a\00l\00 \00w\00i\00t\00h\00 \00N\00a\00N\00")
 (data (i32.const 13180) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00l\00o\00w\00e\00r\00 \00t\00h\00a\00n\00 \00w\00i\00t\00h\00 \00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 13244) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00*\00\00\00g\00r\00e\00a\00t\00e\00r\00 \00t\00h\00a\00n\00 \00w\00i\00t\00h\00 \00N\00a\00N\00\00\00")
 (data (i32.const 13308) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13340) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00S\00u\00m\00\00\00\00\00\00\00")
 (data (i32.const 13372) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00D\00\00\00w\00i\00t\00h\00 \00t\00w\00o\00 \00D\006\004\00 \00h\00a\00v\00i\00n\00g\00 \00s\00a\00m\00e\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13468) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00N\00\00\00w\00i\00t\00h\00 \00t\00w\00o\00 \00D\006\004\00 \00h\00a\00v\00i\00n\00g\00 \00d\00i\00f\00f\00e\00r\00e\00n\00t\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13580) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00w\00i\00t\00h\00 \00a\00 \00N\00a\00N\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13628) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00w\00i\00t\00h\00 \00a\00 \00N\00a\00N\00 \00(\00r\00e\00v\00e\00r\00s\00e\00 \00o\00r\00d\00e\00r\00)\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13708) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13740) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00S\00u\00b\00s\00t\00r\00a\00c\00t\00i\00o\00n\00\00\00\00\00")
 (data (i32.const 13788) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00w\00i\00t\00h\00 \00n\00e\00g\00a\00t\00i\00v\00e\00 \00v\00a\00l\00u\00e\00\00\00\00\00\00\00")
 (data (i32.const 13852) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13884) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00M\00u\00l\00t\00i\00p\00l\00i\00c\00a\00t\00i\00o\00n\00")
 (data (i32.const 13932) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13964) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00D\00i\00v\00i\00s\00i\00o\00n\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14012) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00w\00i\00t\00h\00 \00n\00u\00l\00l\00 \00v\00a\00l\00u\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14076) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14108) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14140) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00R\00a\00n\00d\00o\00m\00 \00t\00e\00s\00t\00s\00\00\00\00\00")
 (data (i32.const 14188) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00+\00-\00*\00/\00\00\00\00\00")
 (data (i32.const 14220) "\00\01\02\03\04\05\06\07\08\t\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#$%&\'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\7f")
 (data (i32.const 14348) "\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1fff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\82\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01\00\00\00\00\00\00\00\00\00\00\00\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07\00\00\00\00\00\00\00\00\00\00\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e `\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c\00\00\00\02\00\00\00\00\00\00\00\00\04\\\00\00\00\00\00\00\00\00\00\00\00\f2\07\c0\7f\00\00\00\00\00\00\00\00\00\00\00\00\f2\1f@?\00\00\00\00\00\00\00\00\00\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@\00\00\00\00\00\00\00\00\00\00\00\00\e0\fdf\00\00\00\c3\01\00\1e\00d \00 \00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\e0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\87\01\04\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\ff\01\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\00\00\00\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\80\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\00\00\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00<>\08\00\00\00\00\00\00\00\00\00\00\00~\00\00\00\00\00\00\00\00\00\00\00p\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\00\10\00\00\00\00\00\00\00\00\00\00\00\80\f7\bf\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\03\00\ff\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\01\00\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00\03D\08\00\00`\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X\00\00\00\00\00\00\00\00\00\00\00\00\f8\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00 !\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00n\f0\00\00\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\9e\00\00\00\00\00\00\00\00\00\00\00\80\d3@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\\\00\00@\00\00\00\00\00\00\00\00\00\00\f8\85\0d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00<\b0\01\00\000\00\00\00\00\00\00\00\00\00\00\f8\a7\01\00\00\00\00\00\00\00\00\00\00\00\00(\bf\00\00\00\00\00\00\00\00\00\00\00\00\e0\bc\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\ff\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7f\bf\00\00\00\00\00\00\00\00\00\00\fc\ff\ff\fcm\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00~\b4\bf\00\00\00\00\00\00\00\00\00\a3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\00\00\00\00\7f\00\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\03\f8\ff\e7\0f\00\00\00<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff\00\00\00\00\00\00\00\00\00\00\7f\ff\ff\f9\db\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8")
 (data (i32.const 17356) "\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1fff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\80\00\00\ff\1f\00\00\00\00\00\00\00\00\00\00\00\00\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff\fc\07\00\00\00\00`\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\01\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 18924) "\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1ey1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0cl\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03x8+++++++++++++O-++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00++++++++\07\00HVVVVVVVV\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++++UVVVVVVVVVVVV\0ee\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++VVVVVVVVVV\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++UVVVVVVVVVV\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 21592) "\00\08\00\00V\01\00\009\00\00\00")
 (data (i32.const 21604) "\00\00\00\00\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 22564) "\00\06\'Qow\00\00\00\00\00\00\00\00\00\00|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa\00\00\00\00\00\00\00\00\00\00\b4\c4\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c6\c9\00\00\00\db\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4\00\00\00\00\00\00\00\00\00\00\00\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ea\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ed\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23076) "0\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 23484) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23516) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23548) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23580) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00v\00a\00l\00u\00e\00 \00`\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23644) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00`\00 \00i\00n\00 \00\00\00")
 (data (i32.const 23676) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\006\00\00\00~\00l\00i\00b\00/\00a\00s\00-\00b\00i\00g\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00B\00i\00g\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 23756) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00L\00\00\00C\00u\00r\00r\00e\00n\00t\00l\00y\00 \00o\00n\00l\00y\00 \00r\00a\00d\00i\00x\00 \001\000\00 \00i\00s\00 \00s\00u\00p\00p\00o\00r\00t\00e\00d\00:\00 \00")
 (data (i32.const 23852) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 23884) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23932) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 23984) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24040) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\0dXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 24736) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\0d\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 24912) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 24956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\00+\00\00\00\00\00\00\00\00\00")
 (data (i32.const 24988) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\000\00.\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25020) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\006\00\00\00a\00s\00-\00b\00i\00g\00 \00n\00o\00t\00 \00w\00o\00r\00k\00i\00n\00g\00 \00(\00v\00a\00l\00u\00e\00:\00 \00\00\00\00\00\00\00")
 (data (i32.const 25100) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00,\00 \00p\00r\00e\00c\00i\00s\00i\00o\00n\00:\00 \00\00\00")
 (data (i32.const 25148) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00S\00u\00m\00 \00o\00f\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25196) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00 \00+\00 \00\00\00\00\00\00\00")
 (data (i32.const 25228) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00 \00=\00 \00\00\00\00\00\00\00")
 (data (i32.const 25260) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\0d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25292) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25324) "\1c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 25356) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data (i32.const 25420) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data (i32.const 25488) "\12\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\t\02\00\00\00\00\00\02\01\00\00\00\00\00\00\02\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00$\n\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00B\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00")
 (table $0 16 funcref)
 (elem $0 (i32.const 1) $start:assembly/__tests__/d64.spec~anonymous|0~anonymous|0 $start:assembly/__tests__/d64.spec~anonymous|0 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|0 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|1~anonymous|0 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|1 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|2 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|3 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|4 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|5 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|6 $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|7 $start:assembly/__tests__/d64.spec~anonymous|1 $start:assembly/__tests__/d64.spec~anonymous|2~anonymous|0 $start:assembly/__tests__/d64.spec~anonymous|2 $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0)
 (export "__ignoreLogs" (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "_start" (func $~start))
 (export "__call" (func $export:node_modules/@as-pect/assembly/assembly/internal/call/__call))
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
 )
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  (local $var$3 i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   local.set $var$3
   local.get $var$3
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 288
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   i32.load $0 offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 288
    i32.const 127
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  i32.load $0 offset=8
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 288
   i32.const 131
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   i32.const 416
   i32.const 480
   i32.const 22
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 8
  i32.mul
  i32.add
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  i32.load $0 offset=12
  local.set $rtId
  local.get $rtId
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  i32.load $0 offset=8
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $var$1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   i32.load $0 offset=8
   local.tee $var$1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 288
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $var$1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  (local $var$2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $var$2
   local.get $var$2
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $prev i32)
  (local $next i32)
  (local $var$10 i32)
  (local $var$11 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $var$6
   i32.const 1073741820
   local.tee $var$7
   local.get $var$6
   local.get $var$7
   i32.lt_u
   select
   local.set $var$6
   i32.const 31
   local.get $var$6
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$6
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  i32.load $0 offset=4
  local.set $prev
  local.get $block
  i32.load $0 offset=8
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  local.get $root
  local.set $var$10
  local.get $fl
  local.set $var$6
  local.get $sl
  local.set $var$7
  local.get $var$10
  local.get $var$6
  i32.const 4
  i32.shl
  local.get $var$7
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $root
   local.set $var$11
   local.get $fl
   local.set $var$10
   local.get $sl
   local.set $var$6
   local.get $next
   local.set $var$7
   local.get $var$11
   local.get $var$10
   i32.const 4
   i32.shl
   local.get $var$6
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $var$7
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    local.get $root
    local.set $var$6
    local.get $fl
    local.set $var$7
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $var$6
    local.get $root
    local.set $var$7
    local.get $fl
    local.set $var$11
    local.get $var$6
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $var$6
    local.set $var$10
    local.get $var$7
    local.get $var$11
    i32.const 2
    i32.shl
    i32.add
    local.get $var$10
    i32.store $0 offset=4
    local.get $var$6
    i32.eqz
    if
     local.get $root
     local.get $root
     i32.load $0
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $var$3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $var$6 i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$10 i32)
  (local $head i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  local.set $var$3
  local.get $var$3
  i32.const 4
  i32.add
  local.get $var$3
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $right
  local.get $right
  i32.load $0
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $var$3
   local.get $var$3
   i32.const 4
   i32.add
   local.get $var$3
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $right
   local.get $right
   i32.load $0
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   local.get $block
   local.set $var$3
   local.get $var$3
   i32.const 4
   i32.sub
   i32.load $0
   local.set $var$3
   local.get $var$3
   i32.load $0
   local.set $var$6
   i32.const 1
   drop
   local.get $var$6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 560
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $var$3
   call $~lib/rt/tlsf/removeBlock
   local.get $var$3
   local.set $block
   local.get $block
   local.get $var$6
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $var$3
   i32.const 1073741820
   local.tee $var$6
   local.get $var$3
   local.get $var$6
   i32.lt_u
   select
   local.set $var$3
   i32.const 31
   local.get $var$3
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$3
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.set $var$10
  local.get $fl
  local.set $var$3
  local.get $sl
  local.set $var$6
  local.get $var$10
  local.get $var$3
  i32.const 4
  i32.shl
  local.get $var$6
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $var$12
  local.get $fl
  local.set $var$10
  local.get $sl
  local.set $var$3
  local.get $block
  local.set $var$6
  local.get $var$12
  local.get $var$10
  i32.const 4
  i32.shl
  local.get $var$3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $var$6
  i32.store $0 offset=96
  local.get $root
  local.get $root
  i32.load $0
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $var$13
  local.get $fl
  local.set $var$12
  local.get $root
  local.set $var$3
  local.get $fl
  local.set $var$6
  local.get $var$3
  local.get $var$6
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $var$10
  local.get $var$13
  local.get $var$12
  i32.const 2
  i32.shl
  i32.add
  local.get $var$10
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $var$9 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  local.get $root
  local.set $var$3
  local.get $var$3
  i32.load $0 offset=1568
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 560
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    i32.load $0
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 560
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $var$9
  local.get $tail
  local.set $var$3
  local.get $var$9
  local.get $var$3
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $var$5
  i32.const 0
  local.set $var$4
  local.get $var$5
  local.get $var$4
  i32.store $0 offset=1568
  i32.const 0
  local.set $var$5
  loop $for-loop|0
   local.get $var$5
   i32.const 23
   i32.lt_u
   local.set $var$4
   local.get $var$4
   if
    local.get $root
    local.set $var$8
    local.get $var$5
    local.set $var$7
    i32.const 0
    local.set $var$6
    local.get $var$8
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    local.get $var$6
    i32.store $0 offset=4
    i32.const 0
    local.set $var$8
    loop $for-loop|1
     local.get $var$8
     i32.const 16
     i32.lt_u
     local.set $var$7
     local.get $var$7
     if
      local.get $root
      local.set $var$11
      local.get $var$5
      local.set $var$10
      local.get $var$8
      local.set $var$9
      i32.const 0
      local.set $var$6
      local.get $var$11
      local.get $var$10
      i32.const 4
      i32.shl
      local.get $var$9
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $var$6
      i32.store $0 offset=96
      local.get $var$8
      i32.const 1
      i32.add
      local.set $var$8
      br $for-loop|1
     end
    end
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   i32.load $0
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  i32.load $0
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $var$1 i32)
  (local $var$2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $var$1
      local.get $var$1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $var$1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $var$1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $var$1
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $var$2
     local.get $var$2
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $var$1
      i32.ne
      if
       local.get $obj
       local.get $var$1
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $var$2
      local.get $var$2
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $var$1
       i32.ne
       if
        local.get $obj
        local.get $var$1
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $var$2
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $var$2
     global.set $~lib/rt/itcms/toSpace
     local.get $var$1
     global.set $~lib/rt/itcms/white
     local.get $var$2
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 288
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 224
   i32.const 560
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $slMap i32)
  (local $head i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $var$4
   i32.const 31
   local.get $var$4
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$4
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.set $var$5
  local.get $fl
  local.set $var$4
  local.get $var$5
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   i32.load $0
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $var$5
   local.get $var$5
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $var$5
    i32.ctz
    local.set $fl
    local.get $root
    local.set $var$8
    local.get $fl
    local.set $var$4
    local.get $var$8
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 560
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $root
    local.set $var$9
    local.get $fl
    local.set $var$8
    local.get $slMap
    i32.ctz
    local.set $var$4
    local.get $var$9
    local.get $var$8
    i32.const 4
    i32.shl
    local.get $var$4
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    local.set $head
   end
  else
   local.get $root
   local.set $var$9
   local.get $fl
   local.set $var$8
   local.get $slMap
   i32.ctz
   local.set $var$4
   local.get $var$9
   local.get $var$8
   i32.const 4
   i32.shl
   local.get $var$4
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   local.set $head
  end
  local.get $head
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $var$3 i32)
  (local $pagesNeeded i32)
  (local $var$5 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $root
  local.set $var$3
  local.get $var$3
  i32.load $0 offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $var$3
  local.get $pagesNeeded
  local.tee $var$5
  local.get $var$3
  local.get $var$5
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $var$5 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $var$5
   local.get $var$5
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $var$5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $var$5
   local.get $var$5
   i32.const 4
   i32.add
   local.get $var$5
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $block
   local.set $var$5
   local.get $var$5
   i32.const 4
   i32.add
   local.get $var$5
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load $0
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 560
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 560
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 224
   i32.const 288
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
 )
 (func $~lib/util/string/compareImpl (param $str1 i32) (param $index1 i32) (param $str2 i32) (param $index2 i32) (param $len i32) (result i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $var$7 i32)
  (local $a i32)
  (local $b i32)
  local.get $str1
  local.get $index1
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr1
  local.get $str2
  local.get $index2
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr2
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $len
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $ptr1
   i32.const 7
   i32.and
   local.get $ptr2
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $ptr1
     i64.load $0
     local.get $ptr2
     i64.load $0
     i64.ne
     if
      br $do-break|0
     end
     local.get $ptr1
     i32.const 8
     i32.add
     local.set $ptr1
     local.get $ptr2
     i32.const 8
     i32.add
     local.set $ptr2
     local.get $len
     i32.const 4
     i32.sub
     local.set $len
     local.get $len
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $len
   local.tee $var$7
   i32.const 1
   i32.sub
   local.set $len
   local.get $var$7
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr1
    i32.load16_u $0
    local.set $a
    local.get $ptr2
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.ne
    if
     local.get $a
     local.get $b
     i32.sub
     return
    end
    local.get $ptr1
    i32.const 2
    i32.add
    local.set $ptr1
    local.get $ptr2
    i32.const 2
    i32.add
    local.set $ptr2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String.__eq (param $left i32) (param $right i32) (result i32)
  (local $leftLength i32)
  local.get $left
  local.get $right
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $left
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $right
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $left
  call $~lib/string/String#get:length
  local.set $leftLength
  local.get $leftLength
  local.get $right
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $left
  i32.const 0
  local.get $right
  i32.const 0
  local.get $leftLength
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 288
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $var$4
   local.get $var$4
   call $~lib/rt/itcms/Object#get:color
   local.set $var$5
   local.get $var$5
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $var$4
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $var$5
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:actual (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:_not (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String> (param $actual i32) (result i32)
  i32.const 0
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#constructor
 )
 (func $~lib/util/hash/HASH<usize> (param $key i32) (result i32)
  (local $var$1 i32)
  (local $var$2 i32)
  (local $var$3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $key
  local.set $var$2
  i32.const 4
  local.set $var$1
  i32.const 0
  i32.const 374761393
  i32.add
  local.get $var$1
  i32.add
  local.set $var$3
  local.get $var$3
  local.get $var$2
  i32.const -1028477379
  i32.mul
  i32.add
  local.set $var$3
  local.get $var$3
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.set $var$3
  local.get $var$3
  local.get $var$3
  i32.const 15
  i32.shr_u
  i32.xor
  local.set $var$3
  local.get $var$3
  i32.const -2048144777
  i32.mul
  local.set $var$3
  local.get $var$3
  local.get $var$3
  i32.const 13
  i32.shr_u
  i32.xor
  local.set $var$3
  local.get $var$3
  i32.const -1028477379
  i32.mul
  local.set $var$3
  local.get $var$3
  local.get $var$3
  i32.const 16
  i32.shr_u
  i32.xor
  local.set $var$3
  local.get $var$3
  return
 )
 (func $~lib/map/Map<usize,i32>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $var$4 i32)
  (local $taggedNext i32)
  local.get $this
  i32.load $0
  local.get $hashCode
  local.get $this
  i32.load $0 offset=4
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   local.set $var$4
   local.get $var$4
   if
    local.get $entry
    i32.load $0 offset=8
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     i32.load $0
     local.get $key
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $entry
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
 )
 (func $~lib/map/Map<usize,i32>#has (param $this i32) (param $key i32) (result i32)
  local.get $this
  local.get $key
  local.get $key
  call $~lib/util/hash/HASH<usize>
  call $~lib/map/Map<usize,i32>#find
  i32.const 0
  i32.ne
 )
 (func $~lib/map/Map<usize,i32>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  local.get $this
  local.get $key
  local.get $key
  call $~lib/util/hash/HASH<usize>
  call $~lib/map/Map<usize,i32>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 720
   i32.const 784
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<usize,i32>#set:value (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/map/MapEntry<usize,i32>#set:key (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/map/MapEntry<usize,i32>#set:taggedNext (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<usize,i32>#set:buckets (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<usize,i32>#set:bucketsMask (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<usize,i32>#set:entries (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<usize,i32>#set:entriesCapacity (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<usize,i32>#set:entriesOffset (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<usize,i32>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $var$9 i32)
  (local $oldEntry i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  (local $var$14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  i32.load $0 offset=8
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  i32.load $0 offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   local.set $var$9
   local.get $var$9
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $var$11
     local.get $oldEntry
     i32.load $0
     local.set $var$12
     local.get $var$11
     local.get $var$12
     call $~lib/map/MapEntry<usize,i32>#set:key
     local.get $var$11
     local.get $oldEntry
     i32.load $0 offset=4
     call $~lib/map/MapEntry<usize,i32>#set:value
     local.get $var$12
     call $~lib/util/hash/HASH<usize>
     local.get $newBucketsMask
     i32.and
     local.set $var$13
     local.get $newBuckets
     local.get $var$13
     i32.const 4
     i32.mul
     i32.add
     local.set $var$14
     local.get $var$11
     local.get $var$14
     i32.load $0
     call $~lib/map/MapEntry<usize,i32>#set:taggedNext
     local.get $var$14
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     i32.const 12
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    i32.const 12
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.get $newBuckets
  call $~lib/map/Map<usize,i32>#set:buckets
  local.get $this
  local.get $newBucketsMask
  call $~lib/map/Map<usize,i32>#set:bucketsMask
  local.get $this
  local.get $newEntries
  call $~lib/map/Map<usize,i32>#set:entries
  local.get $this
  local.get $newEntriesCapacity
  call $~lib/map/Map<usize,i32>#set:entriesCapacity
  local.get $this
  local.get $this
  i32.load $0 offset=20
  call $~lib/map/Map<usize,i32>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<usize,i32>#set:entriesCount (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=20
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace (param $id i32)
  local.get $id
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<~lib/string/String> (param $actual i32)
  (local $value i32)
  local.get $actual
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
 )
 (func $~lib/array/Array<usize>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/assert/assert (param $condition i32) (param $message i32)
  local.get $condition
  i32.eqz
  if
   local.get $message
   i32.const 1024
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String> (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  i32.const 1
  drop
  local.get $left
  local.get $right
  i32.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  local.get $left
  local.get $right
  call $~lib/string/String.__eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $left
  i32.const 0
  i32.eq
  local.get $right
  i32.const 0
  i32.eq
  i32.xor
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
   return
  end
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  i32.const 0
  drop
  local.get $left
  local.get $right
  local.get $stack
  local.get $cache
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/string/String>
  return
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String> (param $expected i32) (param $negated i32)
  (local $value i32)
  local.get $expected
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
 )
 (func $assembly/decimal/d64/D64#set:value (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store $0
 )
 (func $assembly/decimal/d64/D64#set:precision (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 $0 offset=8
 )
 (func $assembly/decimal/d64/D64#set:notANumber (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 $0 offset=9
 )
 (func $~lib/util/number/decimalCount32 (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $buffer i32) (param $num i32) (param $offset i32)
  (local $var$3 i32)
  (local $t i32)
  (local $r i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  (local $var$10 i32)
  (local $var$11 i32)
  loop $while-continue|0
   local.get $num
   i32.const 10000
   i32.ge_u
   local.set $var$3
   local.get $var$3
   if
    local.get $num
    i32.const 10000
    i32.div_u
    local.set $t
    local.get $num
    i32.const 10000
    i32.rem_u
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 100
    i32.div_u
    local.set $d1
    local.get $r
    i32.const 100
    i32.rem_u
    local.set $d2
    i32.const 2060
    local.get $d1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 2060
    local.get $d2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $num
  i32.const 100
  i32.ge_u
  if
   local.get $num
   i32.const 100
   i32.div_u
   local.set $var$3
   local.get $num
   i32.const 100
   i32.rem_u
   local.set $var$10
   local.get $var$3
   local.set $num
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 2060
   local.get $var$10
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $var$11
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $var$11
   i32.store $0
  end
  local.get $num
  i32.const 10
  i32.ge_u
  if
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 2060
   local.get $num
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $var$11
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $var$11
   i32.store $0
  else
   local.get $offset
   i32.const 1
   i32.sub
   local.set $offset
   i32.const 48
   local.get $num
   i32.add
   local.set $var$11
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $var$11
   i32.store16 $0
  end
 )
 (func $~lib/util/number/decimalCount64High (param $value i64) (result i32)
  local.get $value
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $value
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 10
    local.get $value
    i64.const 100000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 13
    local.get $value
    i64.const 100000000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    local.get $value
    i64.const 10000000000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 18
    local.get $value
    i64.const -8446744073709551616
    i64.ge_u
    i32.add
    local.get $value
    i64.const 1000000000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_dec_lut (param $buffer i32) (param $num i64) (param $offset i32)
  (local $var$3 i32)
  (local $t i64)
  (local $r i32)
  (local $b i32)
  (local $c i32)
  (local $b1 i32)
  (local $b2 i32)
  (local $c1 i32)
  (local $c2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  loop $while-continue|0
   local.get $num
   i64.const 100000000
   i64.ge_u
   local.set $var$3
   local.get $var$3
   if
    local.get $num
    i64.const 100000000
    i64.div_u
    local.set $t
    local.get $num
    local.get $t
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 10000
    i32.div_u
    local.set $b
    local.get $r
    i32.const 10000
    i32.rem_u
    local.set $c
    local.get $b
    i32.const 100
    i32.div_u
    local.set $b1
    local.get $b
    i32.const 100
    i32.rem_u
    local.set $b2
    local.get $c
    i32.const 100
    i32.div_u
    local.set $c1
    local.get $c
    i32.const 100
    i32.rem_u
    local.set $c2
    i32.const 2060
    local.get $c1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 2060
    local.get $c2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    i32.const 2060
    local.get $b1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 2060
    local.get $b2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $buffer
  local.get $num
  i32.wrap_i64
  local.get $offset
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/utoa_hex_lut (param $buffer i32) (param $num i64) (param $offset i32)
  (local $var$3 i32)
  loop $while-continue|0
   local.get $offset
   i32.const 2
   i32.ge_u
   local.set $var$3
   local.get $var$3
   if
    local.get $offset
    i32.const 2
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 2480
    local.get $num
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $num
    i64.const 8
    i64.shr_u
    local.set $num
    br $while-continue|0
   end
  end
  local.get $offset
  i32.const 1
  i32.and
  if
   local.get $buffer
   i32.const 2480
   local.get $num
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u $0
   i32.store16 $0
  end
 )
 (func $~lib/util/number/ulog_base (param $num i64) (param $base i32) (result i32)
  (local $var$2 i32)
  (local $b64 i64)
  (local $b i64)
  (local $e i32)
  local.get $base
  local.set $var$2
  local.get $var$2
  i32.popcnt
  i32.const 1
  i32.eq
  if
   i32.const 63
   local.get $num
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $base
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $base
  i64.extend_i32_s
  local.set $b64
  local.get $b64
  local.set $b
  i32.const 1
  local.set $e
  loop $while-continue|0
   local.get $num
   local.get $b
   i64.ge_u
   local.set $var$2
   local.get $var$2
   if
    local.get $num
    local.get $b
    i64.div_u
    local.set $num
    local.get $b
    local.get $b
    i64.mul
    local.set $b
    local.get $e
    i32.const 1
    i32.shl
    local.set $e
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $num
   i64.const 1
   i64.ge_u
   local.set $var$2
   local.get $var$2
   if
    local.get $num
    local.get $b64
    i64.div_u
    local.set $num
    local.get $e
    i32.const 1
    i32.add
    local.set $e
    br $while-continue|1
   end
  end
  local.get $e
  i32.const 1
  i32.sub
 )
 (func $~lib/util/number/utoa64_any_core (param $buffer i32) (param $num i64) (param $offset i32) (param $radix i32)
  (local $base i64)
  (local $var$5 i64)
  (local $q i64)
  local.get $radix
  i64.extend_i32_s
  local.set $base
  local.get $radix
  local.get $radix
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $radix
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $var$5
   local.get $base
   i64.const 1
   i64.sub
   local.set $q
   loop $do-loop|0
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 3536
    local.get $num
    local.get $q
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $num
    local.get $var$5
    i64.shr_u
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $num
    local.get $base
    i64.div_u
    local.set $q
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 3536
    local.get $num
    local.get $q
    local.get $base
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $q
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/number/U64#toString (param $this i64) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/utoa64
 )
 (func $~lib/math/NativeMath.pow (param $x f64) (param $y f64) (result f64)
  (local $var$2 f64)
  (local $var$3 f64)
  (local $var$4 i32)
  (local $var$5 i64)
  (local $var$6 i64)
  (local $var$7 i64)
  (local $var$8 i64)
  (local $var$9 i64)
  (local $var$10 f64)
  (local $var$11 i64)
  (local $var$12 i32)
  (local $var$13 i64)
  (local $var$14 i64)
  (local $var$15 f64)
  (local $var$16 f64)
  (local $var$17 f64)
  (local $var$18 f64)
  (local $var$19 f64)
  (local $var$20 f64)
  (local $var$21 f64)
  (local $var$22 f64)
  (local $var$23 f64)
  (local $var$24 f64)
  (local $var$25 f64)
  (local $var$26 f64)
  (local $var$27 f64)
  (local $var$28 f64)
  (local $var$29 f64)
  (local $var$30 f64)
  (local $var$31 f64)
  (local $var$32 f64)
  (local $var$33 f64)
  (local $var$34 f64)
  (local $var$35 f64)
  (local $var$36 f64)
  (local $var$37 f64)
  (local $var$38 f64)
  (local $var$39 i32)
  (local $var$40 i32)
  (local $var$41 i32)
  (local $var$42 i32)
  (local $var$43 i64)
  (local $var$44 i64)
  local.get $y
  f64.abs
  f64.const 2
  f64.le
  if
   local.get $y
   f64.const 2
   f64.eq
   if
    local.get $x
    local.get $x
    f64.mul
    return
   end
   local.get $y
   f64.const 0.5
   f64.eq
   if
    local.get $x
    f64.sqrt
    f64.abs
    f64.const inf
    local.get $x
    f64.const inf
    f64.neg
    f64.ne
    select
    return
   end
   local.get $y
   f64.const -1
   f64.eq
   if
    f64.const 1
    local.get $x
    f64.div
    return
   end
   local.get $y
   f64.const 1
   f64.eq
   if
    local.get $x
    return
   end
   local.get $y
   f64.const 0
   f64.eq
   if
    f64.const 1
    return
   end
  end
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/pow_lut|inlined.0 (result f64)
   local.get $x
   local.set $var$3
   local.get $y
   local.set $var$2
   i32.const 0
   local.set $var$4
   local.get $var$3
   i64.reinterpret_f64
   local.set $var$5
   local.get $var$2
   i64.reinterpret_f64
   local.set $var$6
   local.get $var$5
   i64.const 52
   i64.shr_u
   local.set $var$7
   local.get $var$6
   i64.const 52
   i64.shr_u
   local.set $var$8
   local.get $var$7
   i64.const 1
   i64.sub
   i64.const 2047
   i64.const 1
   i64.sub
   i64.ge_u
   if (result i32)
    i32.const 1
   else
    local.get $var$8
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 1086
    i64.const 958
    i64.sub
    i64.ge_u
   end
   if
    local.get $var$6
    local.set $var$9
    local.get $var$9
    i64.const 1
    i64.shl
    i64.const 1
    i64.sub
    i64.const -9007199254740992
    i64.const 1
    i64.sub
    i64.ge_u
    if
     local.get $var$6
     i64.const 1
     i64.shl
     i64.const 0
     i64.eq
     if
      f64.const 1
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$5
     i64.const 4607182418800017408
     i64.eq
     if
      f64.const nan:0x8000000000000
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$5
     i64.const 1
     i64.shl
     i64.const -9007199254740992
     i64.gt_u
     if (result i32)
      i32.const 1
     else
      local.get $var$6
      i64.const 1
      i64.shl
      i64.const -9007199254740992
      i64.gt_u
     end
     if
      local.get $var$3
      local.get $var$2
      f64.add
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$5
     i64.const 1
     i64.shl
     i64.const 9214364837600034816
     i64.eq
     if
      f64.const nan:0x8000000000000
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$5
     i64.const 1
     i64.shl
     i64.const 9214364837600034816
     i64.lt_u
     local.get $var$6
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     i32.eqz
     i32.eq
     if
      f64.const 0
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$2
     local.get $var$2
     f64.mul
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $var$5
    local.set $var$9
    local.get $var$9
    i64.const 1
    i64.shl
    i64.const 1
    i64.sub
    i64.const -9007199254740992
    i64.const 1
    i64.sub
    i64.ge_u
    if
     local.get $var$3
     local.get $var$3
     f64.mul
     local.set $var$10
     local.get $var$5
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     if (result i32)
      block $~lib/util/math/checkint|inlined.0 (result i32)
       local.get $var$6
       local.set $var$9
       local.get $var$9
       i64.const 52
       i64.shr_u
       i64.const 2047
       i64.and
       local.set $var$11
       local.get $var$11
       i64.const 1023
       i64.lt_u
       if
        i32.const 0
        br $~lib/util/math/checkint|inlined.0
       end
       local.get $var$11
       i64.const 1023
       i64.const 52
       i64.add
       i64.gt_u
       if
        i32.const 2
        br $~lib/util/math/checkint|inlined.0
       end
       i64.const 1
       i64.const 1023
       i64.const 52
       i64.add
       local.get $var$11
       i64.sub
       i64.shl
       local.set $var$11
       local.get $var$9
       local.get $var$11
       i64.const 1
       i64.sub
       i64.and
       i64.const 0
       i64.ne
       if
        i32.const 0
        br $~lib/util/math/checkint|inlined.0
       end
       local.get $var$9
       local.get $var$11
       i64.and
       i64.const 0
       i64.ne
       if
        i32.const 1
        br $~lib/util/math/checkint|inlined.0
       end
       i32.const 2
      end
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     if
      local.get $var$10
      f64.neg
      local.set $var$10
     end
     local.get $var$6
     i64.const 0
     i64.lt_s
     if (result f64)
      f64.const 1
      local.get $var$10
      f64.div
     else
      local.get $var$10
     end
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $var$5
    i64.const 0
    i64.lt_s
    if
     block $~lib/util/math/checkint|inlined.1 (result i32)
      local.get $var$6
      local.set $var$9
      local.get $var$9
      i64.const 52
      i64.shr_u
      i64.const 2047
      i64.and
      local.set $var$11
      local.get $var$11
      i64.const 1023
      i64.lt_u
      if
       i32.const 0
       br $~lib/util/math/checkint|inlined.1
      end
      local.get $var$11
      i64.const 1023
      i64.const 52
      i64.add
      i64.gt_u
      if
       i32.const 2
       br $~lib/util/math/checkint|inlined.1
      end
      i64.const 1
      i64.const 1023
      i64.const 52
      i64.add
      local.get $var$11
      i64.sub
      i64.shl
      local.set $var$11
      local.get $var$9
      local.get $var$11
      i64.const 1
      i64.sub
      i64.and
      i64.const 0
      i64.ne
      if
       i32.const 0
       br $~lib/util/math/checkint|inlined.1
      end
      local.get $var$9
      local.get $var$11
      i64.and
      i64.const 0
      i64.ne
      if
       i32.const 1
       br $~lib/util/math/checkint|inlined.1
      end
      i32.const 2
     end
     local.set $var$12
     local.get $var$12
     i32.const 0
     i32.eq
     if
      local.get $var$3
      local.get $var$3
      f64.sub
      local.get $var$3
      local.get $var$3
      f64.sub
      f64.div
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$12
     i32.const 1
     i32.eq
     if
      i32.const 262144
      local.set $var$4
     end
     local.get $var$5
     i64.const 9223372036854775807
     i64.and
     local.set $var$5
     local.get $var$7
     i64.const 2047
     i64.and
     local.set $var$7
    end
    local.get $var$8
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 1086
    i64.const 958
    i64.sub
    i64.ge_u
    if
     local.get $var$5
     i64.const 4607182418800017408
     i64.eq
     if
      f64.const 1
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$8
     i64.const 2047
     i64.and
     i64.const 958
     i64.lt_u
     if
      f64.const 1
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $var$5
     i64.const 4607182418800017408
     i64.gt_u
     local.get $var$8
     i64.const 2048
     i64.lt_u
     i32.eq
     if (result f64)
      f64.const inf
     else
      f64.const 0
     end
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $var$7
    i64.const 0
    i64.eq
    if
     local.get $var$3
     f64.const 4503599627370496
     f64.mul
     i64.reinterpret_f64
     local.set $var$5
     local.get $var$5
     i64.const 9223372036854775807
     i64.and
     local.set $var$5
     local.get $var$5
     i64.const 52
     i64.const 52
     i64.shl
     i64.sub
     local.set $var$5
    end
   end
   local.get $var$5
   local.set $var$9
   local.get $var$9
   i64.const 4604531861337669632
   i64.sub
   local.set $var$11
   local.get $var$11
   i64.const 52
   i32.const 7
   i64.extend_i32_s
   i64.sub
   i64.shr_u
   i32.const 127
   i64.extend_i32_s
   i64.and
   i32.wrap_i64
   local.set $var$12
   local.get $var$11
   i64.const 52
   i64.shr_s
   local.set $var$13
   local.get $var$9
   local.get $var$11
   i64.const 4095
   i64.const 52
   i64.shl
   i64.and
   i64.sub
   local.set $var$14
   local.get $var$14
   f64.reinterpret_i64
   local.set $var$10
   local.get $var$13
   f64.convert_i64_s
   local.set $var$15
   i32.const 3616
   local.get $var$12
   i32.const 2
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0
   local.set $var$16
   i32.const 3616
   local.get $var$12
   i32.const 2
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0 offset=16
   local.set $var$17
   i32.const 3616
   local.get $var$12
   i32.const 2
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load $0 offset=24
   local.set $var$18
   local.get $var$14
   i64.const 2147483648
   i64.add
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.set $var$19
   local.get $var$10
   local.get $var$19
   f64.sub
   local.set $var$20
   local.get $var$19
   local.get $var$16
   f64.mul
   f64.const 1
   f64.sub
   local.set $var$21
   local.get $var$20
   local.get $var$16
   f64.mul
   local.set $var$22
   local.get $var$21
   local.get $var$22
   f64.add
   local.set $var$23
   local.get $var$15
   f64.const 0.6931471805598903
   f64.mul
   local.get $var$17
   f64.add
   local.set $var$24
   local.get $var$24
   local.get $var$23
   f64.add
   local.set $var$25
   local.get $var$15
   f64.const 5.497923018708371e-14
   f64.mul
   local.get $var$18
   f64.add
   local.set $var$26
   local.get $var$24
   local.get $var$25
   f64.sub
   local.get $var$23
   f64.add
   local.set $var$27
   f64.const -0.5
   local.get $var$23
   f64.mul
   local.set $var$28
   local.get $var$23
   local.get $var$28
   f64.mul
   local.set $var$29
   local.get $var$23
   local.get $var$29
   f64.mul
   local.set $var$30
   f64.const -0.5
   local.get $var$21
   f64.mul
   local.set $var$31
   local.get $var$21
   local.get $var$31
   f64.mul
   local.set $var$32
   local.get $var$25
   local.get $var$32
   f64.add
   local.set $var$33
   local.get $var$22
   local.get $var$28
   local.get $var$31
   f64.add
   f64.mul
   local.set $var$34
   local.get $var$25
   local.get $var$33
   f64.sub
   local.get $var$32
   f64.add
   local.set $var$35
   local.get $var$30
   f64.const -0.6666666666666679
   local.get $var$23
   f64.const 0.5000000000000007
   f64.mul
   f64.add
   local.get $var$29
   f64.const 0.7999999995323976
   local.get $var$23
   f64.const -0.6666666663487739
   f64.mul
   f64.add
   local.get $var$29
   f64.const -1.142909628459501
   local.get $var$23
   f64.const 1.0000415263675542
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.set $var$36
   local.get $var$26
   local.get $var$27
   f64.add
   local.get $var$34
   f64.add
   local.get $var$35
   f64.add
   local.get $var$36
   f64.add
   local.set $var$37
   local.get $var$33
   local.get $var$37
   f64.add
   local.set $var$38
   local.get $var$33
   local.get $var$38
   f64.sub
   local.get $var$37
   f64.add
   global.set $~lib/util/math/log_tail
   local.get $var$38
   local.set $var$38
   global.get $~lib/util/math/log_tail
   local.set $var$37
   local.get $var$6
   i64.const -134217728
   i64.and
   f64.reinterpret_i64
   local.set $var$34
   local.get $var$2
   local.get $var$34
   f64.sub
   local.set $var$33
   local.get $var$38
   i64.reinterpret_f64
   i64.const -134217728
   i64.and
   f64.reinterpret_i64
   local.set $var$32
   local.get $var$38
   local.get $var$32
   f64.sub
   local.get $var$37
   f64.add
   local.set $var$31
   local.get $var$34
   local.get $var$32
   f64.mul
   local.set $var$36
   local.get $var$33
   local.get $var$32
   f64.mul
   local.get $var$2
   local.get $var$31
   f64.mul
   f64.add
   local.set $var$35
   block $~lib/util/math/exp_inline|inlined.0 (result f64)
    local.get $var$36
    local.set $var$15
    local.get $var$35
    local.set $var$10
    local.get $var$4
    local.set $var$12
    local.get $var$15
    i64.reinterpret_f64
    local.set $var$9
    local.get $var$9
    i64.const 52
    i64.shr_u
    i32.wrap_i64
    i32.const 2047
    i32.and
    local.set $var$39
    local.get $var$39
    i32.const 969
    i32.sub
    i32.const 63
    i32.ge_u
    if
     local.get $var$39
     i32.const 969
     i32.sub
     i32.const -2147483648
     i32.ge_u
     if
      f64.const -1
      f64.const 1
      local.get $var$12
      select
      br $~lib/util/math/exp_inline|inlined.0
     end
     local.get $var$39
     i32.const 1033
     i32.ge_u
     if
      local.get $var$9
      i64.const 0
      i64.lt_s
      if (result f64)
       local.get $var$12
       local.set $var$41
       local.get $var$41
       local.set $var$42
       i64.const 1152921504606846976
       f64.reinterpret_i64
       local.set $var$16
       local.get $var$16
       f64.neg
       local.get $var$16
       local.get $var$42
       select
       local.get $var$16
       f64.mul
      else
       local.get $var$12
       local.set $var$42
       local.get $var$42
       local.set $var$41
       i64.const 8070450532247928832
       f64.reinterpret_i64
       local.set $var$17
       local.get $var$17
       f64.neg
       local.get $var$17
       local.get $var$41
       select
       local.get $var$17
       f64.mul
      end
      br $~lib/util/math/exp_inline|inlined.0
     end
     i32.const 0
     local.set $var$39
    end
    f64.const 184.6649652337873
    local.get $var$15
    f64.mul
    local.set $var$29
    local.get $var$29
    f64.const 6755399441055744
    f64.add
    local.set $var$30
    local.get $var$30
    i64.reinterpret_f64
    local.set $var$14
    local.get $var$30
    f64.const 6755399441055744
    f64.sub
    local.set $var$30
    local.get $var$15
    local.get $var$30
    f64.const -0.005415212348111709
    f64.mul
    f64.add
    local.get $var$30
    f64.const -1.2864023111638346e-14
    f64.mul
    f64.add
    local.set $var$28
    local.get $var$28
    local.get $var$10
    f64.add
    local.set $var$28
    local.get $var$14
    i32.const 127
    i64.extend_i32_s
    i64.and
    i64.const 1
    i64.shl
    i32.wrap_i64
    local.set $var$40
    local.get $var$14
    local.get $var$12
    i64.extend_i32_u
    i64.add
    i64.const 52
    i32.const 7
    i64.extend_i32_s
    i64.sub
    i64.shl
    local.set $var$13
    i32.const 7712
    local.get $var$40
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    f64.reinterpret_i64
    local.set $var$25
    i32.const 7712
    local.get $var$40
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.get $var$13
    i64.add
    local.set $var$11
    local.get $var$28
    local.get $var$28
    f64.mul
    local.set $var$27
    local.get $var$25
    local.get $var$28
    f64.add
    local.get $var$27
    f64.const 0.49999999999996786
    local.get $var$28
    f64.const 0.16666666666665886
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $var$27
    local.get $var$27
    f64.mul
    f64.const 0.0416666808410674
    local.get $var$28
    f64.const 0.008333335853059549
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $var$24
    local.get $var$39
    i32.const 0
    i32.eq
    if
     block $~lib/util/math/specialcase|inlined.0 (result f64)
      local.get $var$24
      local.set $var$18
      local.get $var$11
      local.set $var$44
      local.get $var$14
      local.set $var$43
      local.get $var$43
      i64.const 2147483648
      i64.and
      i64.const 0
      i64.ne
      i32.eqz
      if
       local.get $var$44
       i64.const 1009
       i64.const 52
       i64.shl
       i64.sub
       local.set $var$44
       local.get $var$44
       f64.reinterpret_i64
       local.set $var$17
       f64.const 5486124068793688683255936e279
       local.get $var$17
       local.get $var$17
       local.get $var$18
       f64.mul
       f64.add
       f64.mul
       br $~lib/util/math/specialcase|inlined.0
      end
      local.get $var$44
      i64.const 1022
      i64.const 52
      i64.shl
      i64.add
      local.set $var$44
      local.get $var$44
      f64.reinterpret_i64
      local.set $var$17
      local.get $var$17
      local.get $var$17
      local.get $var$18
      f64.mul
      f64.add
      local.set $var$16
      local.get $var$16
      f64.abs
      f64.const 1
      f64.lt
      if
       f64.const 1
       local.get $var$16
       f64.copysign
       local.set $var$23
       local.get $var$17
       local.get $var$16
       f64.sub
       local.get $var$17
       local.get $var$18
       f64.mul
       f64.add
       local.set $var$22
       local.get $var$23
       local.get $var$16
       f64.add
       local.set $var$21
       local.get $var$23
       local.get $var$21
       f64.sub
       local.get $var$16
       f64.add
       local.get $var$22
       f64.add
       local.set $var$22
       local.get $var$21
       local.get $var$22
       f64.add
       local.get $var$23
       f64.sub
       local.set $var$16
       local.get $var$16
       f64.const 0
       f64.eq
       if
        local.get $var$44
        i64.const -9223372036854775808
        i64.and
        f64.reinterpret_i64
        local.set $var$16
       end
      end
      local.get $var$16
      f64.const 2.2250738585072014e-308
      f64.mul
     end
     br $~lib/util/math/exp_inline|inlined.0
    end
    local.get $var$11
    f64.reinterpret_i64
    local.set $var$26
    local.get $var$26
    local.get $var$26
    local.get $var$24
    f64.mul
    f64.add
   end
  end
  return
 )
 (func $~lib/string/String.__concat (param $left i32) (param $right i32) (result i32)
  local.get $left
  local.get $right
  call $~lib/string/String#concat
 )
 (func $assembly/__tests__/d64.spec/UT#set:decimal (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/__tests__/d64.spec/UT#set:wantedPrecision (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 $0 offset=4
 )
 (func $assembly/__tests__/d64.spec/UT#set:want (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/__tests__/d64.spec/UT>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $assembly/decimal/d64/D64#changePrecision (param $this i32) (param $precision i32) (result i32)
  (local $var$2 i64)
  (local $var$3 i64)
  local.get $precision
  i32.const 255
  i32.and
  local.get $this
  i32.load8_u $0 offset=8
  i32.eq
  if
   local.get $this
   return
  end
  local.get $precision
  i32.const 255
  i32.and
  local.get $this
  i32.load8_u $0 offset=8
  i32.gt_u
  if
   f64.const 10
   local.get $precision
   local.get $this
   i32.load8_u $0 offset=8
   i32.sub
   f64.convert_i32_u
   call $~lib/math/NativeMath.pow
   i64.trunc_sat_f64_u
   local.set $var$2
   local.get $this
   i64.load $0
   i64.const 0
   i64.ne
   if (result i32)
    local.get $var$2
    i64.const -1
    local.get $this
    i64.load $0
    i64.div_u
    i64.gt_u
   else
    i32.const 0
   end
   if
    i32.const 0
    i64.const 0
    i32.const 0
    i32.const 1
    call $assembly/decimal/d64/D64#constructor
    return
   end
   local.get $this
   i64.load $0
   local.get $var$2
   i64.mul
   local.set $var$3
   i32.const 0
   local.get $var$3
   local.get $precision
   i32.const 0
   call $assembly/decimal/d64/D64#constructor
   return
  end
  local.get $this
  i64.load $0
  i64.const 10
  i64.rem_u
  local.get $this
  i32.load8_u $0 offset=8
  local.get $precision
  i32.sub
  i32.const 255
  i32.and
  i64.extend_i32_u
  i64.mul
  i64.const 0
  i64.ne
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   return
  end
  i32.const 0
  local.get $this
  i64.load $0
  f64.const 10
  local.get $this
  i32.load8_u $0 offset=8
  local.get $precision
  i32.sub
  f64.convert_i32_u
  call $~lib/math/NativeMath.pow
  i64.trunc_sat_f64_u
  i64.div_u
  local.get $precision
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#set:actual (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#set:_not (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64> (param $actual i32) (result i32)
  i32.const 0
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#constructor
 )
 (func $~lib/number/U8#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  i32.const 255
  i32.and
  local.get $radix
  call $~lib/util/number/utoa32
 )
 (func $~lib/staticarray/StaticArray<i64>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 3
  i32.shr_u
 )
 (func $~lib/staticarray/StaticArray<i64>#indexOf (param $this i32) (param $value i64) (param $fromIndex i32) (result i32)
  (local $length i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $this
  call $~lib/staticarray/StaticArray<i64>#get:length
  local.set $length
  local.get $length
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $length
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $length
   local.get $fromIndex
   i32.add
   local.tee $var$4
   i32.const 0
   local.tee $var$5
   local.get $var$4
   local.get $var$5
   i32.gt_s
   select
   local.set $fromIndex
  end
  loop $while-continue|0
   local.get $fromIndex
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $this
    local.get $fromIndex
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $value
    i64.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/staticarray/StaticArray<i64>#includes (param $this i32) (param $value i64) (param $fromIndex i32) (result i32)
  i32.const 0
  drop
  local.get $this
  local.get $value
  local.get $fromIndex
  call $~lib/staticarray/StaticArray<i64>#indexOf
  i32.const 0
  i32.ge_s
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<assembly/decimal/d64/D64> (param $actual i32)
  (local $value i32)
  local.get $actual
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/decimal/d64/D64>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
 )
 (func $~lib/array/Array<usize>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen (param $a1 i32) (param $a2 i32) (param $b1 i32) (param $b2 i32) (result i32)
  local.get $a1
  local.get $b1
  i32.eq
  local.get $a2
  local.get $b2
  i32.eq
  i32.and
  local.get $a1
  local.get $b2
  i32.eq
  local.get $a2
  local.get $b1
  i32.eq
  i32.and
  i32.or
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $var$4
  local.get $oldObj
  i32.load $0 offset=16
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $array
  i32.load $0 offset=8
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 832
    i32.const 10928
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   i32.load $0
   local.set $var$5
   local.get $newSize
   local.tee $var$6
   i32.const 8
   local.tee $var$7
   local.get $var$6
   local.get $var$7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $var$6
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $var$7
    i32.const 1073741820
    local.tee $var$8
    local.get $var$7
    local.get $var$8
    i32.lt_u
    select
    local.tee $var$8
    local.get $var$6
    local.tee $var$7
    local.get $var$8
    local.get $var$7
    i32.gt_u
    select
    local.set $var$6
   end
   local.get $var$5
   local.get $var$6
   call $~lib/rt/itcms/__renew
   local.set $var$8
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $var$8
   local.get $var$5
   i32.ne
   if
    local.get $array
    local.get $var$8
    i32.store $0
    local.get $array
    local.get $var$8
    i32.store $0 offset=4
    local.get $array
    local.get $var$8
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $var$6
   i32.store $0 offset=8
  end
 )
 (func $~lib/array/Array<usize>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<usize>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=12
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $len
  call $~lib/array/Array<usize>#set:length_
  local.get $len
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u64> (param $left i64) (param $right i64) (param $stack i32) (param $cache i32) (result i32)
  i32.const 0
  drop
  local.get $left
  local.get $right
  i64.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u8> (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  i32.const 0
  drop
  local.get $left
  i32.const 255
  i32.and
  local.get $right
  i32.const 255
  i32.and
  i32.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<bool> (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  i32.const 0
  drop
  local.get $left
  i32.const 0
  i32.ne
  local.get $right
  i32.const 0
  i32.ne
  i32.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
 )
 (func $assembly/decimal/d64/D64#__aspectStrictEquals (param $this i32) (param $ref i32) (param $stack i32) (param $cache i32) (param $ignore i32) (result i32)
  local.get $ignore
  i64.const 4733438614275358720
  i32.const 0
  call $~lib/staticarray/StaticArray<i64>#includes
  i32.eqz
  if (result i32)
   local.get $this
   i64.load $0
   local.get $ref
   i64.load $0
   local.get $stack
   local.get $cache
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u64>
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 0
   return
  end
  local.get $ignore
  i64.const 4745330659885580288
  i32.const 0
  call $~lib/staticarray/StaticArray<i64>#includes
  i32.eqz
  if (result i32)
   local.get $this
   i32.load8_u $0 offset=8
   local.get $ref
   i32.load8_u $0 offset=8
   local.get $stack
   local.get $cache
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<u8>
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 0
   return
  end
  local.get $ignore
  i64.const 4749468039659913216
  i32.const 0
  call $~lib/staticarray/StaticArray<i64>#includes
  i32.eqz
  if (result i32)
   local.get $this
   i32.load8_u $0 offset=9
   local.get $ref
   i32.load8_u $0 offset=9
   local.get $stack
   local.get $cache
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<bool>
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 0
   return
  end
  i32.const 0
  drop
  i32.const 1
 )
 (func $~lib/array/Array<usize>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 11008
   i32.const 10928
   i32.const 275
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $val
  local.get $this
  local.get $len
  call $~lib/array/Array<usize>#set:length_
  local.get $val
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<assembly/decimal/d64/D64> (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  i32.const 1
  drop
  local.get $left
  local.get $right
  i32.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  local.get $left
  local.get $right
  call $assembly/decimal/d64/D64.equal
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $left
  i32.const 0
  i32.eq
  local.get $right
  i32.const 0
  i32.eq
  i32.xor
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
   return
  end
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  i32.const 0
  drop
  local.get $left
  local.get $right
  local.get $stack
  local.get $cache
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<assembly/decimal/d64/D64>
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<assembly/decimal/d64/D64> (param $expected i32) (param $negated i32)
  (local $value i32)
  local.get $expected
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/decimal/d64/D64>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|1~anonymous|0 (param $t i32) (param $$1 i32) (param $$2 i32)
  local.get $t
  call $assembly/__tests__/d64.spec/UT#execute
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#set:actual (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 $0 offset=4
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#set:_not (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool> (param $actual i32) (result i32)
  i32.const 0
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<bool> (param $actual i32)
  (local $value i32)
  local.get $actual
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.reportTruthy (param $negated i32)
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedTruthy
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy (param $this i32) (param $message i32)
  (local $actual i32)
  (local $negated i32)
  (local $var$4 i32)
  local.get $this
  i32.load8_u $0 offset=4
  local.set $actual
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<bool>
  local.get $this
  i32.load $0
  local.set $negated
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.reportTruthy
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $actual
  i32.const 0
  i32.ne
  i32.const 0
  i32.ne
  local.set $var$4
  local.get $var$4
  local.get $negated
  i32.xor
  local.get $message
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#get:not (param $this i32) (result i32)
  local.get $this
  i32.const 1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#set:_not
  local.get $this
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#get:not (param $this i32) (result i32)
  local.get $this
  i32.const 1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#set:_not
  local.get $this
 )
 (func $~lib/math/murmurHash3 (param $h i64) (result i64)
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -49064778989728563
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -4265267296055464877
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
 )
 (func $~lib/math/splitMix32 (param $h i32) (result i32)
  local.get $h
  i32.const 1831565813
  i32.add
  local.set $h
  local.get $h
  local.get $h
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 1
  i32.or
  i32.mul
  local.set $h
  local.get $h
  local.get $h
  local.get $h
  local.get $h
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $h
  local.get $h
  local.get $h
  i32.const 14
  i32.shr_u
  i32.xor
 )
 (func $~lib/math/NativeMath.seedRandom (param $value i64)
  local.get $value
  i64.const 0
  i64.eq
  if
   i64.const -7046029254386353131
   local.set $value
  end
  local.get $value
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $value
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  i32.const 1
  global.set $~lib/math/random_seeded
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $s1 i64)
  (local $s0 i64)
  (local $r i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $s1
  global.get $~lib/math/random_state1_64
  local.set $s0
  local.get $s0
  global.set $~lib/math/random_state0_64
  local.get $s1
  local.get $s1
  i64.const 23
  i64.shl
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s1
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  global.set $~lib/math/random_state1_64
  local.get $s0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $r
  local.get $r
  f64.reinterpret_i64
  f64.const 1
  f64.sub
 )
 (func $~lib/math/NativeMath.round (param $x f64) (result f64)
  (local $var$1 f64)
  i32.const 0
  i32.const 0
  i32.gt_s
  drop
  local.get $x
  f64.ceil
  local.set $var$1
  local.get $var$1
  local.get $var$1
  f64.const 1
  f64.sub
  local.get $var$1
  f64.const 0.5
  f64.sub
  local.get $x
  f64.le
  select
  return
 )
 (func $~lib/util/string/stagedBinaryLookup (param $table i32) (param $c i32) (result i32)
  local.get $table
  local.get $table
  local.get $c
  i32.const 8
  i32.shr_u
  i32.add
  i32.load8_u $0
  i32.const 5
  i32.shl
  i32.add
  local.get $c
  i32.const 255
  i32.and
  i32.const 3
  i32.shr_u
  i32.add
  i32.load8_u $0
  local.get $c
  i32.const 7
  i32.and
  i32.shr_u
  i32.const 1
  i32.and
 )
 (func $~lib/util/casemap/casemap (param $c i32) (param $dir i32) (result i32)
  (local $c0 i32)
  (local $b i32)
  (local $x i32)
  (local $y i32)
  (local $v i32)
  (local $r i32)
  (local $rt i32)
  (local $rd i32)
  (local $xn i32)
  (local $xb i32)
  (local $var$12 i32)
  (local $h i32)
  (local $t i32)
  local.get $c
  local.set $c0
  local.get $c
  i32.const 8
  i32.shr_u
  local.set $b
  local.get $c
  i32.const 255
  i32.and
  local.set $c
  local.get $c
  i32.const 3
  i32.div_u
  local.set $x
  local.get $c
  i32.const 3
  i32.rem_u
  local.set $y
  i32.const 18924
  i32.const 18924
  local.get $b
  i32.add
  i32.load8_u $0
  i32.const 86
  i32.mul
  i32.add
  local.get $x
  i32.add
  i32.load8_u $0
  local.set $v
  local.get $v
  i32.const 21592
  local.get $y
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.mul
  i32.const 11
  i32.shr_u
  i32.const 6
  i32.rem_u
  local.set $v
  i32.const 21604
  i32.const 22564
  local.get $b
  i32.add
  i32.load8_u $0
  local.get $v
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $r
  local.get $r
  i32.const 255
  i32.and
  local.set $rt
  local.get $r
  i32.const 8
  i32.shr_s
  local.set $rd
  local.get $rt
  i32.const 2
  i32.lt_u
  if
   local.get $c0
   local.get $rd
   i32.const 0
   local.get $rt
   local.get $dir
   i32.xor
   i32.sub
   i32.and
   i32.add
   return
  end
  local.get $rd
  i32.const 255
  i32.and
  local.set $xn
  local.get $rd
  i32.const 8
  i32.shr_u
  local.set $xb
  loop $while-continue|0
   local.get $xn
   local.set $var$12
   local.get $var$12
   if
    local.get $xn
    i32.const 1
    i32.shr_u
    local.set $h
    i32.const 23076
    local.get $xb
    local.get $h
    i32.add
    i32.const 2
    i32.mul
    i32.add
    i32.load8_u $0
    local.set $t
    local.get $t
    local.get $c
    i32.eq
    if
     i32.const 21604
     i32.const 23076
     local.get $xb
     local.get $h
     i32.add
     i32.const 2
     i32.mul
     i32.add
     i32.load8_u $0 offset=1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $r
     local.get $r
     i32.const 255
     i32.and
     local.set $rt
     local.get $r
     i32.const 8
     i32.shr_s
     local.set $rd
     local.get $rt
     i32.const 2
     i32.lt_u
     if
      local.get $c0
      local.get $rd
      i32.const 0
      local.get $rt
      local.get $dir
      i32.xor
      i32.sub
      i32.and
      i32.add
      return
     end
     local.get $c0
     i32.const 1
     i32.add
     local.get $dir
     i32.const 1
     i32.shl
     i32.sub
     return
    else
     local.get $t
     local.get $c
     i32.gt_u
     if
      local.get $h
      local.set $xn
     else
      local.get $xb
      local.get $h
      i32.add
      local.set $xb
      local.get $xn
      local.get $h
      i32.sub
      local.set $xn
     end
    end
    br $while-continue|0
   end
  end
  local.get $c0
 )
 (func $~lib/util/string/isSpace (param $c i32) (result i32)
  (local $var$1 i32)
  local.get $c
  i32.const 5760
  i32.lt_u
  if
   local.get $c
   i32.const 128
   i32.or
   i32.const 160
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $c
    i32.const 9
    i32.sub
    i32.const 13
    i32.const 9
    i32.sub
    i32.le_u
   end
   return
  end
  local.get $c
  i32.const 8192
  i32.sub
  i32.const 8202
  i32.const 8192
  i32.sub
  i32.le_u
  if
   i32.const 1
   return
  end
  block $break|0
   block $case6|0
    block $case5|0
     block $case4|0
      block $case3|0
       block $case2|0
        block $case1|0
         block $case0|0
          local.get $c
          local.set $var$1
          local.get $var$1
          i32.const 5760
          i32.eq
          br_if $case0|0
          local.get $var$1
          i32.const 8232
          i32.eq
          br_if $case1|0
          local.get $var$1
          i32.const 8233
          i32.eq
          br_if $case2|0
          local.get $var$1
          i32.const 8239
          i32.eq
          br_if $case3|0
          local.get $var$1
          i32.const 8287
          i32.eq
          br_if $case4|0
          local.get $var$1
          i32.const 12288
          i32.eq
          br_if $case5|0
          local.get $var$1
          i32.const 65279
          i32.eq
          br_if $case6|0
          br $break|0
         end
        end
       end
      end
     end
    end
   end
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/util/string/strtol<i32> (param $str i32) (param $radix i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  (local $code i32)
  (local $var$5 i32)
  (local $sign i32)
  (local $num i32)
  (local $initial i32)
  local.get $str
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   i32.const 0
   drop
   i32.const 0
   return
  end
  local.get $str
  local.set $ptr
  local.get $ptr
  i32.load16_u $0
  local.set $code
  loop $while-continue|0
   local.get $code
   call $~lib/util/string/isSpace
   local.set $var$5
   local.get $var$5
   if
    local.get $ptr
    i32.const 2
    i32.add
    local.tee $ptr
    i32.load16_u $0
    local.set $code
    local.get $len
    i32.const 1
    i32.sub
    local.set $len
    br $while-continue|0
   end
  end
  i32.const 1
  local.set $sign
  local.get $code
  i32.const 45
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $code
   i32.const 43
   i32.eq
  end
  if
   local.get $len
   i32.const 1
   i32.sub
   local.tee $len
   i32.eqz
   if
    i32.const 0
    drop
    i32.const 0
    return
   end
   local.get $code
   i32.const 45
   i32.eq
   if
    i32.const -1
    local.set $sign
   end
   local.get $ptr
   i32.const 2
   i32.add
   local.tee $ptr
   i32.load16_u $0
   local.set $code
  end
  local.get $radix
  if
   local.get $radix
   i32.const 2
   i32.lt_s
   if (result i32)
    i32.const 1
   else
    local.get $radix
    i32.const 36
    i32.gt_s
   end
   if
    i32.const 0
    drop
    i32.const 0
    return
   end
   local.get $radix
   i32.const 16
   i32.eq
   if
    local.get $len
    i32.const 2
    i32.gt_s
    if (result i32)
     local.get $code
     i32.const 48
     i32.eq
    else
     i32.const 0
    end
    if (result i32)
     local.get $ptr
     i32.load16_u $0 offset=2
     i32.const 32
     i32.or
     i32.const 120
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $ptr
     i32.const 4
     i32.add
     local.set $ptr
     local.get $len
     i32.const 2
     i32.sub
     local.set $len
    end
   end
  else
   local.get $code
   i32.const 48
   i32.eq
   if (result i32)
    local.get $len
    i32.const 2
    i32.gt_s
   else
    i32.const 0
   end
   if
    block $break|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $ptr
        i32.load16_u $0 offset=2
        i32.const 32
        i32.or
        local.set $var$5
        local.get $var$5
        i32.const 98
        i32.eq
        br_if $case0|1
        local.get $var$5
        i32.const 111
        i32.eq
        br_if $case1|1
        local.get $var$5
        i32.const 120
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $ptr
       i32.const 4
       i32.add
       local.set $ptr
       local.get $len
       i32.const 2
       i32.sub
       local.set $len
       i32.const 2
       local.set $radix
       br $break|1
      end
      local.get $ptr
      i32.const 4
      i32.add
      local.set $ptr
      local.get $len
      i32.const 2
      i32.sub
      local.set $len
      i32.const 8
      local.set $radix
      br $break|1
     end
     local.get $ptr
     i32.const 4
     i32.add
     local.set $ptr
     local.get $len
     i32.const 2
     i32.sub
     local.set $len
     i32.const 16
     local.set $radix
     br $break|1
    end
   end
   local.get $radix
   i32.eqz
   if
    i32.const 10
    local.set $radix
   end
  end
  i32.const 0
  local.set $num
  local.get $len
  i32.const 1
  i32.sub
  local.set $initial
  block $while-break|2
   loop $while-continue|2
    local.get $len
    local.tee $var$5
    i32.const 1
    i32.sub
    local.set $len
    local.get $var$5
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     i32.load16_u $0
     local.set $code
     local.get $code
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if
      local.get $code
      i32.const 48
      i32.sub
      local.set $code
     else
      local.get $code
      i32.const 65
      i32.sub
      i32.const 90
      i32.const 65
      i32.sub
      i32.le_u
      if
       local.get $code
       i32.const 65
       i32.const 10
       i32.sub
       i32.sub
       local.set $code
      else
       local.get $code
       i32.const 97
       i32.sub
       i32.const 122
       i32.const 97
       i32.sub
       i32.le_u
       if
        local.get $code
        i32.const 97
        i32.const 10
        i32.sub
        i32.sub
        local.set $code
       end
      end
     end
     local.get $code
     local.get $radix
     i32.ge_u
     if
      local.get $initial
      local.get $len
      i32.eq
      if
       i32.const 0
       drop
       i32.const 0
       return
      end
      br $while-break|2
     end
     local.get $num
     local.get $radix
     i32.mul
     local.get $code
     i32.add
     local.set $num
     local.get $ptr
     i32.const 2
     i32.add
     local.set $ptr
     br $while-continue|2
    end
   end
  end
  local.get $sign
  local.get $num
  i32.mul
 )
 (func $~lib/number/U8.parseInt (param $value i32) (param $radix i32) (result i32)
  local.get $value
  local.get $radix
  call $~lib/util/string/strtol<i32>
 )
 (func $~lib/string/String.__ne (param $left i32) (param $right i32) (result i32)
  local.get $left
  local.get $right
  call $~lib/string/String.__eq
  i32.eqz
 )
 (func $~lib/number/F64.isFinite (param $value f64) (result i32)
  local.get $value
  local.get $value
  f64.sub
  f64.const 0
  f64.eq
 )
 (func $~lib/string/String#indexOf (param $this i32) (param $search i32) (param $start i32) (result i32)
  (local $searchLen i32)
  (local $len i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $searchStart i32)
  local.get $search
  call $~lib/string/String#get:length
  local.set $searchLen
  local.get $searchLen
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $this
  call $~lib/string/String#get:length
  local.set $len
  local.get $len
  i32.eqz
  if
   i32.const -1
   return
  end
  local.get $start
  local.tee $var$5
  i32.const 0
  local.tee $var$6
  local.get $var$5
  local.get $var$6
  i32.gt_s
  select
  local.tee $var$6
  local.get $len
  local.tee $var$5
  local.get $var$6
  local.get $var$5
  i32.lt_s
  select
  local.set $searchStart
  local.get $len
  local.get $searchLen
  i32.sub
  local.set $len
  loop $for-loop|0
   local.get $searchStart
   local.get $len
   i32.le_s
   local.set $var$6
   local.get $var$6
   if
    local.get $this
    local.get $searchStart
    local.get $search
    i32.const 0
    local.get $searchLen
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     local.get $searchStart
     return
    end
    local.get $searchStart
    i32.const 1
    i32.add
    local.set $searchStart
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $~lib/number/I32.parseInt (param $value i32) (param $radix i32) (result i32)
  local.get $value
  local.get $radix
  call $~lib/util/string/strtol<i32>
 )
 (func $~lib/array/Array<u8>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<u8>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<u8>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<u8>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<u8>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8 $0
  i32.const 0
  drop
 )
 (func $~lib/as-big/assembly/Big/Big#set:s (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store8 $0
 )
 (func $~lib/as-big/assembly/Big/Big#set:e (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/as-big/assembly/Big/Big#set:c (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/as-big/assembly/Big/Big.of<~lib/string/String> (param $n i32) (result i32)
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  local.get $n
  call $~lib/as-big/assembly/Big/BigOfString#constructor
  return
 )
 (func $~lib/util/number/genDigits (param $buffer i32) (param $w_frc i64) (param $w_exp i32) (param $mp_frc i64) (param $mp_exp i32) (param $delta i64) (param $sign i32) (result i32)
  (local $one_exp i32)
  (local $one_frc i64)
  (local $mask i64)
  (local $wp_w_frc i64)
  (local $p1 i32)
  (local $p2 i64)
  (local $kappa i32)
  (local $len i32)
  (local $var$15 i32)
  (local $d i32)
  (local $var$17 i32)
  (local $tmp i64)
  (local $var$19 i64)
  (local $var$20 i64)
  (local $var$21 i64)
  (local $d_0 i64)
  (local $var$23 i32)
  (local $var$24 i32)
  (local $var$25 i32)
  (local $var$26 i32)
  (local $var$27 i64)
  i32.const 0
  local.get $mp_exp
  i32.sub
  local.set $one_exp
  i64.const 1
  local.get $one_exp
  i64.extend_i32_s
  i64.shl
  local.set $one_frc
  local.get $one_frc
  i64.const 1
  i64.sub
  local.set $mask
  local.get $mp_frc
  local.get $w_frc
  i64.sub
  local.set $wp_w_frc
  local.get $mp_frc
  local.get $one_exp
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $p1
  local.get $mp_frc
  local.get $mask
  i64.and
  local.set $p2
  local.get $p1
  call $~lib/util/number/decimalCount32
  local.set $kappa
  local.get $sign
  local.set $len
  loop $while-continue|0
   local.get $kappa
   i32.const 0
   i32.gt_s
   local.set $var$15
   local.get $var$15
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $kappa
                local.set $var$17
                local.get $var$17
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $var$17
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $var$17
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $var$17
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $var$17
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $var$17
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $var$17
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $var$17
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $var$17
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $var$17
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $p1
               i32.const 1000000000
               i32.div_u
               local.set $d
               local.get $p1
               i32.const 1000000000
               i32.rem_u
               local.set $p1
               br $break|1
              end
              local.get $p1
              i32.const 100000000
              i32.div_u
              local.set $d
              local.get $p1
              i32.const 100000000
              i32.rem_u
              local.set $p1
              br $break|1
             end
             local.get $p1
             i32.const 10000000
             i32.div_u
             local.set $d
             local.get $p1
             i32.const 10000000
             i32.rem_u
             local.set $p1
             br $break|1
            end
            local.get $p1
            i32.const 1000000
            i32.div_u
            local.set $d
            local.get $p1
            i32.const 1000000
            i32.rem_u
            local.set $p1
            br $break|1
           end
           local.get $p1
           i32.const 100000
           i32.div_u
           local.set $d
           local.get $p1
           i32.const 100000
           i32.rem_u
           local.set $p1
           br $break|1
          end
          local.get $p1
          i32.const 10000
          i32.div_u
          local.set $d
          local.get $p1
          i32.const 10000
          i32.rem_u
          local.set $p1
          br $break|1
         end
         local.get $p1
         i32.const 1000
         i32.div_u
         local.set $d
         local.get $p1
         i32.const 1000
         i32.rem_u
         local.set $p1
         br $break|1
        end
        local.get $p1
        i32.const 100
        i32.div_u
        local.set $d
        local.get $p1
        i32.const 100
        i32.rem_u
        local.set $p1
        br $break|1
       end
       local.get $p1
       i32.const 10
       i32.div_u
       local.set $d
       local.get $p1
       i32.const 10
       i32.rem_u
       local.set $p1
       br $break|1
      end
      local.get $p1
      local.set $d
      i32.const 0
      local.set $p1
      br $break|1
     end
     i32.const 0
     local.set $d
     br $break|1
    end
    local.get $d
    local.get $len
    i32.or
    if
     local.get $buffer
     local.get $len
     local.tee $var$17
     i32.const 1
     i32.add
     local.set $len
     local.get $var$17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p1
    i64.extend_i32_u
    local.get $one_exp
    i64.extend_i32_s
    i64.shl
    local.get $p2
    i64.add
    local.set $tmp
    local.get $tmp
    local.get $delta
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $buffer
     local.set $var$23
     local.get $len
     local.set $var$17
     local.get $delta
     local.set $d_0
     local.get $tmp
     local.set $var$21
     i32.const 24912
     local.get $kappa
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     local.get $one_exp
     i64.extend_i32_s
     i64.shl
     local.set $var$20
     local.get $wp_w_frc
     local.set $var$19
     local.get $var$23
     local.get $var$17
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $var$24
     local.get $var$24
     i32.load16_u $0
     local.set $var$25
     loop $while-continue|3
      local.get $var$21
      local.get $var$19
      i64.lt_u
      if (result i32)
       local.get $d_0
       local.get $var$21
       i64.sub
       local.get $var$20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $var$21
       local.get $var$20
       i64.add
       local.get $var$19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $var$19
        local.get $var$21
        i64.sub
        local.get $var$21
        local.get $var$20
        i64.add
        local.get $var$19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $var$26
      local.get $var$26
      if
       local.get $var$25
       i32.const 1
       i32.sub
       local.set $var$25
       local.get $var$21
       local.get $var$20
       i64.add
       local.set $var$21
       br $while-continue|3
      end
     end
     local.get $var$24
     local.get $var$25
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   local.set $var$15
   local.get $var$15
   if
    local.get $p2
    i64.const 10
    i64.mul
    local.set $p2
    local.get $delta
    i64.const 10
    i64.mul
    local.set $delta
    local.get $p2
    local.get $one_exp
    i64.extend_i32_s
    i64.shr_u
    local.set $d_0
    local.get $d_0
    local.get $len
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $buffer
     local.get $len
     local.tee $var$25
     i32.const 1
     i32.add
     local.set $len
     local.get $var$25
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d_0
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $p2
    local.get $mask
    i64.and
    local.set $p2
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p2
    local.get $delta
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $wp_w_frc
     i32.const 24912
     i32.const 0
     local.get $kappa
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     i64.mul
     local.set $wp_w_frc
     local.get $buffer
     local.set $var$17
     local.get $len
     local.set $var$26
     local.get $delta
     local.set $var$27
     local.get $p2
     local.set $var$21
     local.get $one_frc
     local.set $var$20
     local.get $wp_w_frc
     local.set $var$19
     local.get $var$17
     local.get $var$26
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $var$25
     local.get $var$25
     i32.load16_u $0
     local.set $var$24
     loop $while-continue|6
      local.get $var$21
      local.get $var$19
      i64.lt_u
      if (result i32)
       local.get $var$27
       local.get $var$21
       i64.sub
       local.get $var$20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $var$21
       local.get $var$20
       i64.add
       local.get $var$19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $var$19
        local.get $var$21
        i64.sub
        local.get $var$21
        local.get $var$20
        i64.add
        local.get $var$19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $var$23
      local.get $var$23
      if
       local.get $var$24
       i32.const 1
       i32.sub
       local.set $var$24
       local.get $var$21
       local.get $var$20
       i64.add
       local.set $var$21
       br $while-continue|6
      end
     end
     local.get $var$25
     local.get $var$24
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $buffer i32) (param $length i32) (param $k i32) (result i32)
  (local $kk i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  local.get $k
  i32.eqz
  if
   local.get $buffer
   local.get $length
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $length
   i32.const 2
   i32.add
   return
  end
  local.get $length
  local.get $k
  i32.add
  local.set $kk
  local.get $length
  local.get $kk
  i32.le_s
  if (result i32)
   local.get $kk
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $length
   local.set $var$4
   loop $for-loop|0
    local.get $var$4
    local.get $kk
    i32.lt_s
    local.set $var$5
    local.get $var$5
    if
     local.get $buffer
     local.get $var$4
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $var$4
     i32.const 1
     i32.add
     local.set $var$4
     br $for-loop|0
    end
   end
   local.get $buffer
   local.get $kk
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $kk
   i32.const 2
   i32.add
   return
  else
   local.get $kk
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $kk
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    local.set $var$4
    local.get $var$4
    i32.const 2
    i32.add
    local.get $var$4
    i32.const 0
    local.get $k
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16 $0
    local.get $length
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $kk
    i32.lt_s
    if (result i32)
     local.get $kk
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $kk
     i32.sub
     local.set $var$4
     local.get $buffer
     local.get $var$4
     i32.const 1
     i32.shl
     i32.add
     local.get $buffer
     local.get $length
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $buffer
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
     i32.const 2
     local.set $var$5
     loop $for-loop|1
      local.get $var$5
      local.get $var$4
      i32.lt_s
      local.set $var$6
      local.get $var$6
      if
       local.get $buffer
       local.get $var$5
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $var$5
       i32.const 1
       i32.add
       local.set $var$5
       br $for-loop|1
      end
     end
     local.get $length
     local.get $var$4
     i32.add
     return
    else
     local.get $length
     i32.const 1
     i32.eq
     if
      local.get $buffer
      i32.const 101
      i32.store16 $0 offset=2
      local.get $buffer
      i32.const 4
      i32.add
      local.set $var$5
      local.get $kk
      i32.const 1
      i32.sub
      local.set $var$6
      local.get $var$6
      i32.const 0
      i32.lt_s
      local.set $var$4
      local.get $var$4
      if
       i32.const 0
       local.get $var$6
       i32.sub
       local.set $var$6
      end
      local.get $var$6
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $var$7
      local.get $var$5
      local.set $var$10
      local.get $var$6
      local.set $var$9
      local.get $var$7
      local.set $var$8
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $var$10
      local.get $var$9
      local.get $var$8
      call $~lib/util/number/utoa32_dec_lut
      local.get $var$5
      i32.const 45
      i32.const 43
      local.get $var$4
      select
      i32.store16 $0
      local.get $var$7
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     else
      local.get $length
      i32.const 1
      i32.shl
      local.set $var$7
      local.get $buffer
      i32.const 4
      i32.add
      local.get $buffer
      i32.const 2
      i32.add
      local.get $var$7
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $buffer
      i32.const 46
      i32.store16 $0 offset=2
      local.get $buffer
      local.get $var$7
      i32.add
      i32.const 101
      i32.store16 $0 offset=2
      local.get $length
      local.get $buffer
      local.get $var$7
      i32.add
      i32.const 4
      i32.add
      local.set $var$9
      local.get $kk
      i32.const 1
      i32.sub
      local.set $var$8
      local.get $var$8
      i32.const 0
      i32.lt_s
      local.set $var$4
      local.get $var$4
      if
       i32.const 0
       local.get $var$8
       i32.sub
       local.set $var$8
      end
      local.get $var$8
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $var$5
      local.get $var$9
      local.set $var$11
      local.get $var$8
      local.set $var$6
      local.get $var$5
      local.set $var$10
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $var$11
      local.get $var$6
      local.get $var$10
      call $~lib/util/number/utoa32_dec_lut
      local.get $var$9
      i32.const 45
      i32.const 43
      local.get $var$4
      select
      i32.store16 $0
      local.get $var$5
      i32.add
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $buffer i32) (param $value f64) (result i32)
  (local $sign i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 f64)
  (local $var$6 i64)
  (local $var$7 i32)
  (local $var$8 i64)
  (local $var$9 i64)
  (local $var$10 i32)
  (local $var$11 i64)
  (local $var$12 i64)
  (local $var$13 i32)
  (local $var$14 i32)
  (local $var$15 i32)
  (local $var$16 f64)
  (local $var$17 i64)
  (local $var$18 i64)
  (local $var$19 i64)
  (local $var$20 i64)
  (local $var$21 i64)
  (local $var$22 i64)
  (local $var$23 i64)
  (local $var$24 i64)
  (local $var$25 i64)
  (local $var$26 i32)
  (local $var$27 i64)
  (local $len i32)
  local.get $value
  f64.const 0
  f64.lt
  local.set $sign
  local.get $sign
  if
   local.get $value
   f64.neg
   local.set $value
   local.get $buffer
   i32.const 45
   i32.store16 $0
  end
  local.get $value
  local.set $var$5
  local.get $buffer
  local.set $var$4
  local.get $sign
  local.set $var$3
  local.get $var$5
  i64.reinterpret_f64
  local.set $var$6
  local.get $var$6
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.set $var$7
  local.get $var$6
  i64.const 4503599627370495
  i64.and
  local.set $var$8
  local.get $var$7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  local.get $var$8
  i64.add
  local.set $var$9
  local.get $var$7
  i32.const 1
  local.get $var$7
  select
  i32.const 1023
  i32.const 52
  i32.add
  i32.sub
  local.set $var$7
  local.get $var$9
  local.set $var$11
  local.get $var$7
  local.set $var$10
  local.get $var$11
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.set $var$12
  local.get $var$10
  i32.const 1
  i32.sub
  local.set $var$13
  local.get $var$12
  i64.clz
  i32.wrap_i64
  local.set $var$14
  local.get $var$12
  local.get $var$14
  i64.extend_i32_s
  i64.shl
  local.set $var$12
  local.get $var$13
  local.get $var$14
  i32.sub
  local.set $var$13
  i32.const 1
  local.get $var$11
  i64.const 4503599627370496
  i64.eq
  i32.add
  local.set $var$15
  local.get $var$12
  global.set $~lib/util/number/_frc_plus
  local.get $var$11
  local.get $var$15
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $var$10
  local.get $var$15
  i32.sub
  local.get $var$13
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $var$13
  global.set $~lib/util/number/_exp
  global.get $~lib/util/number/_exp
  local.set $var$10
  i32.const -61
  local.get $var$10
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.set $var$16
  local.get $var$16
  i32.trunc_sat_f64_s
  local.set $var$15
  local.get $var$15
  local.get $var$15
  f64.convert_i32_s
  local.get $var$16
  f64.ne
  i32.add
  local.set $var$15
  local.get $var$15
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.set $var$14
  i32.const 348
  local.get $var$14
  i32.const 3
  i32.shl
  i32.sub
  global.set $~lib/util/number/_K
  i32.const 24040
  local.get $var$14
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  global.set $~lib/util/number/_frc_pow
  i32.const 24736
  local.get $var$14
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  global.set $~lib/util/number/_exp_pow
  local.get $var$9
  i64.clz
  i32.wrap_i64
  local.set $var$14
  local.get $var$9
  local.get $var$14
  i64.extend_i32_s
  i64.shl
  local.set $var$9
  local.get $var$7
  local.get $var$14
  i32.sub
  local.set $var$7
  global.get $~lib/util/number/_frc_pow
  local.set $var$12
  global.get $~lib/util/number/_exp_pow
  local.set $var$15
  local.get $var$9
  local.set $var$17
  local.get $var$12
  local.set $var$11
  local.get $var$17
  i64.const 4294967295
  i64.and
  local.set $var$18
  local.get $var$11
  i64.const 4294967295
  i64.and
  local.set $var$19
  local.get $var$17
  i64.const 32
  i64.shr_u
  local.set $var$20
  local.get $var$11
  i64.const 32
  i64.shr_u
  local.set $var$21
  local.get $var$18
  local.get $var$19
  i64.mul
  local.set $var$22
  local.get $var$20
  local.get $var$19
  i64.mul
  local.get $var$22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $var$23
  local.get $var$18
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $var$24
  local.get $var$24
  i64.const 2147483647
  i64.add
  local.set $var$24
  local.get $var$23
  i64.const 32
  i64.shr_u
  local.set $var$23
  local.get $var$24
  i64.const 32
  i64.shr_u
  local.set $var$24
  local.get $var$20
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.add
  local.get $var$24
  i64.add
  local.set $var$24
  local.get $var$7
  local.set $var$10
  local.get $var$15
  local.set $var$13
  local.get $var$10
  local.get $var$13
  i32.add
  i32.const 64
  i32.add
  local.set $var$10
  global.get $~lib/util/number/_frc_plus
  local.set $var$17
  local.get $var$12
  local.set $var$11
  local.get $var$17
  i64.const 4294967295
  i64.and
  local.set $var$23
  local.get $var$11
  i64.const 4294967295
  i64.and
  local.set $var$22
  local.get $var$17
  i64.const 32
  i64.shr_u
  local.set $var$21
  local.get $var$11
  i64.const 32
  i64.shr_u
  local.set $var$20
  local.get $var$23
  local.get $var$22
  i64.mul
  local.set $var$19
  local.get $var$21
  local.get $var$22
  i64.mul
  local.get $var$19
  i64.const 32
  i64.shr_u
  i64.add
  local.set $var$18
  local.get $var$23
  local.get $var$20
  i64.mul
  local.get $var$18
  i64.const 4294967295
  i64.and
  i64.add
  local.set $var$25
  local.get $var$25
  i64.const 2147483647
  i64.add
  local.set $var$25
  local.get $var$18
  i64.const 32
  i64.shr_u
  local.set $var$18
  local.get $var$25
  i64.const 32
  i64.shr_u
  local.set $var$25
  local.get $var$21
  local.get $var$20
  i64.mul
  local.get $var$18
  i64.add
  local.get $var$25
  i64.add
  i64.const 1
  i64.sub
  local.set $var$25
  global.get $~lib/util/number/_exp
  local.set $var$26
  local.get $var$15
  local.set $var$13
  local.get $var$26
  local.get $var$13
  i32.add
  i32.const 64
  i32.add
  local.set $var$26
  global.get $~lib/util/number/_frc_minus
  local.set $var$17
  local.get $var$12
  local.set $var$11
  local.get $var$17
  i64.const 4294967295
  i64.and
  local.set $var$18
  local.get $var$11
  i64.const 4294967295
  i64.and
  local.set $var$19
  local.get $var$17
  i64.const 32
  i64.shr_u
  local.set $var$20
  local.get $var$11
  i64.const 32
  i64.shr_u
  local.set $var$21
  local.get $var$18
  local.get $var$19
  i64.mul
  local.set $var$22
  local.get $var$20
  local.get $var$19
  i64.mul
  local.get $var$22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $var$23
  local.get $var$18
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $var$27
  local.get $var$27
  i64.const 2147483647
  i64.add
  local.set $var$27
  local.get $var$23
  i64.const 32
  i64.shr_u
  local.set $var$23
  local.get $var$27
  i64.const 32
  i64.shr_u
  local.set $var$27
  local.get $var$20
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.add
  local.get $var$27
  i64.add
  i64.const 1
  i64.add
  local.set $var$27
  local.get $var$25
  local.get $var$27
  i64.sub
  local.set $var$23
  local.get $var$4
  local.get $var$24
  local.get $var$10
  local.get $var$25
  local.get $var$26
  local.get $var$23
  local.get $var$3
  call $~lib/util/number/genDigits
  local.set $len
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.get $len
  local.get $sign
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $len
  local.get $len
  local.get $sign
  i32.add
 )
 (func $~lib/number/F64#toString (param $this f64) (param $radix i32) (result i32)
  local.get $this
  call $~lib/util/number/dtoa
 )
 (func $~lib/array/Array<u8>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
 )
 (func $~lib/util/number/itoa_buffered<u8> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 0
  drop
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $value
  i32.const 255
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $buffer
   local.get $value
   i32.const 255
   i32.and
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.const 255
  i32.and
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/array/Array<u8>#join (param $this i32) (param $separator i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $ptr
  local.get $len
  local.get $separator
  call $~lib/util/string/joinIntegerArray<u8>
  return
 )
 (func $~lib/number/I32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa32
 )
 (func $~lib/array/Array<u8>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/as-big/assembly/Big/Big#eq<~lib/as-big/assembly/Big/Big> (param $this i32) (param $y i32) (result i32)
  local.get $this
  local.get $y
  call $~lib/as-big/assembly/Big/Big#cmp<~lib/as-big/assembly/Big/Big>
  i32.const 0
  i32.eq
 )
 (func $~lib/util/bytes/REVERSE<u8> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i64)
  (local $var$9 i64)
  (local $var$10 i64)
  (local $front_0 i32)
  (local $back_0 i32)
  (local $temp_0 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $len
   i32.const 8
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    i32.const 7
    i32.add
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     i32.add
     local.get $var$2
     i32.sub
     local.set $back
     local.get $front
     i64.load $0
     local.tee $temp
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $temp
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $var$9
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $var$9
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     local.tee $var$9
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $var$9
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $var$10
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $var$10
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $var$2
     i32.const 8
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|1
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 0
     i32.shl
     i32.add
     local.set $front_0
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $back_0
     local.get $front_0
     i32.load8_u $0
     local.set $temp_0
     local.get $front_0
     local.get $back_0
     i32.load8_u $0
     i32.store8 $0
     local.get $back_0
     local.get $temp_0
     i32.store8 $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u8>#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/array/Array<u8>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=12
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 0
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $oldLen
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8 $0
  local.get $this
  local.get $len
  call $~lib/array/Array<u8>#set:length_
  local.get $len
 )
 (func $~lib/array/Array<u8>#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 416
    i32.const 10928
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 0
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<u8>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<u8>#__uset
 )
 (func $~lib/array/Array<u8>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 11008
   i32.const 10928
   i32.const 275
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.set $val
  local.get $this
  local.get $len
  call $~lib/array/Array<u8>#set:length_
  local.get $val
 )
 (func $~lib/array/Array<u8>#shift (param $this i32) (result i32)
  (local $len i32)
  (local $base i32)
  (local $element i32)
  (local $lastIndex i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 11008
   i32.const 10928
   i32.const 334
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.set $base
  local.get $base
  i32.load8_u $0
  local.set $element
  local.get $len
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $base
  local.get $base
  i32.const 1
  i32.add
  local.get $lastIndex
  i32.const 0
  i32.shl
  memory.copy $0 $0
  i32.const 0
  drop
  local.get $base
  local.get $lastIndex
  i32.const 0
  i32.shl
  i32.add
  i32.const 0
  i32.store8 $0
  local.get $this
  local.get $lastIndex
  call $~lib/array/Array<u8>#set:length_
  local.get $element
 )
 (func $~lib/array/Array<u8>#unshift (param $this i32) (param $value i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 0
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $ptr
  i32.const 1
  i32.add
  local.get $ptr
  local.get $len
  i32.const 1
  i32.sub
  i32.const 0
  i32.shl
  memory.copy $0 $0
  local.get $ptr
  local.get $value
  i32.store8 $0
  i32.const 0
  drop
  local.get $this
  local.get $len
  call $~lib/array/Array<u8>#set:length_
  local.get $len
 )
 (func $~lib/as-big/assembly/Big/Big#plusBig (param $this i32) (param $y i32) (result i32)
  local.get $this
  local.get $y
  call $~lib/as-big/assembly/Big/Big#plus<~lib/as-big/assembly/Big/Big>
 )
 (func $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/call/__call (param $func i32)
  i32.const 0
  global.set $~argumentsLength
  local.get $func
  i32.load $0
  call_indirect $0 (type $none_=>_none)
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs (param $value i32)
  local.get $value
  i32.const 0
  i32.ne
  global.set $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
 )
 (func $~lib/rt/itcms/__pin (param $ptr i32) (result i32)
  (local $var$1 i32)
  local.get $ptr
  if
   local.get $ptr
   i32.const 20
   i32.sub
   local.set $var$1
   local.get $var$1
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 25376
    i32.const 288
    i32.const 337
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $var$1
   call $~lib/rt/itcms/Object#unlink
   local.get $var$1
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $ptr
 )
 (func $~lib/rt/itcms/__unpin (param $ptr i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 25440
   i32.const 288
   i32.const 351
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  (local $var$0 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $var$0
    local.get $var$0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $var$0
   local.get $var$0
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  i32.const 416
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 832
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 11008
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 720
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 224
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 25376
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 25440
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 2480
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 3536
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $~lib/as-big/assembly/Big/Big.ZERO
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/map/Map<usize,i32>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  i32.load $0 offset=8
  local.set $entries
  i32.const 0
  drop
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/map/Map<usize,i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/map/Map<usize,i32>#__visit
 )
 (func $~lib/array/Array<usize>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<usize>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<usize>#__visit
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/function/Function<%28%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>void>#__visit
 )
 (func $assembly/__tests__/d64.spec/UT~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<assembly/__tests__/d64.spec/UT>#__visit (param $this i32) (param $cookie i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $var$2
  local.get $var$2
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $var$3
  loop $while-continue|0
   local.get $var$2
   local.get $var$3
   i32.lt_u
   local.set $var$4
   local.get $var$4
   if
    local.get $var$2
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $var$2
    i32.const 4
    i32.add
    local.set $var$2
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<assembly/__tests__/d64.spec/UT>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/__tests__/d64.spec/UT>#__visit
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/function/Function<%28assembly/__tests__/d64.spec/UT%2Ci32%2C~lib/array/Array<assembly/__tests__/d64.spec/UT>%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28assembly/__tests__/d64.spec/UT%2Ci32%2C~lib/array/Array<assembly/__tests__/d64.spec/UT>%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/__tests__/d64.spec/UT%2Ci32%2C~lib/array/Array<assembly/__tests__/d64.spec/UT>%29=>void>#__visit
 )
 (func $~lib/as-big/assembly/Big/Big~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<u8>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#__visit
 )
 (func $~lib/as-big/assembly/Big/BigOfString~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/as-big/assembly/Big/Big~visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/as-big/assembly/Big/BigOfString
    block $~lib/array/Array<u8>
     block $~lib/as-big/assembly/Big/Big
      block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>
       block $~lib/function/Function<%28assembly/__tests__/d64.spec/UT%2Ci32%2C~lib/array/Array<assembly/__tests__/d64.spec/UT>%29=>void>
        block $~lib/staticarray/StaticArray<i64>
         block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>
          block $~lib/array/Array<assembly/__tests__/d64.spec/UT>
           block $assembly/__tests__/d64.spec/UT
            block $assembly/decimal/d64/D64
             block $~lib/function/Function<%28%29=>void>
              block $~lib/array/Array<i32>
               block $~lib/array/Array<usize>
                block $~lib/map/Map<usize,i32>
                 block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>
                  block $~lib/arraybuffer/ArrayBufferView
                   block $~lib/string/String
                    block $~lib/arraybuffer/ArrayBuffer
                     local.get $0
                     i32.const 8
                     i32.sub
                     i32.load $0
                     br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String> $~lib/map/Map<usize,i32> $~lib/array/Array<usize> $~lib/array/Array<i32> $~lib/function/Function<%28%29=>void> $assembly/decimal/d64/D64 $assembly/__tests__/d64.spec/UT $~lib/array/Array<assembly/__tests__/d64.spec/UT> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64> $~lib/staticarray/StaticArray<i64> $~lib/function/Function<%28assembly/__tests__/d64.spec/UT%2Ci32%2C~lib/array/Array<assembly/__tests__/d64.spec/UT>%29=>void> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool> $~lib/as-big/assembly/Big/Big $~lib/array/Array<u8> $~lib/as-big/assembly/Big/BigOfString $invalid
                    end
                    return
                   end
                   return
                  end
                  local.get $0
                  local.get $1
                  call $~lib/arraybuffer/ArrayBufferView~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>~visit
                 return
                end
                local.get $0
                local.get $1
                call $~lib/map/Map<usize,i32>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/array/Array<usize>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/array/Array<i32>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/function/Function<%28%29=>void>~visit
             return
            end
            return
           end
           local.get $0
           local.get $1
           call $assembly/__tests__/d64.spec/UT~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/array/Array<assembly/__tests__/d64.spec/UT>~visit
          return
         end
         local.get $0
         local.get $1
         call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>~visit
         return
        end
        return
       end
       local.get $0
       local.get $1
       call $~lib/function/Function<%28assembly/__tests__/d64.spec/UT%2Ci32%2C~lib/array/Array<assembly/__tests__/d64.spec/UT>%29=>void>~visit
       return
      end
      return
     end
     local.get $0
     local.get $1
     call $~lib/as-big/assembly/Big/Big~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/array/Array<u8>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/as-big/assembly/Big/BigOfString~visit
   return
  end
  unreachable
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:assembly/__tests__/d64.spec
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 42048
   i32.const 42096
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $assembly/__tests__/d64.spec/removeTrailing (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.const -1
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/string/String#slice
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  i32.const 624
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/string/String.__eq
  if (result i32)
   i32.const 1
  else
   local.get $0
   i32.const -1
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/string/String#slice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 656
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   local.get $1
   call $~lib/string/String.__eq
  end
  if
   local.get $0
   i32.const 0
   i32.const -1
   call $~lib/string/String#slice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $assembly/__tests__/d64.spec/removeTrailing
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  else
   local.get $0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  unreachable
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 4
   i32.const 1
   i32.const 1
   i32.const 688
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   i32.const 0
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  i32.eqz
  drop
  local.get $1
  local.get $0
  call $~lib/map/Map<usize,i32>#has
  if
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  local.get $0
  i32.const 0
  local.get $0
  call $~lib/string/String#get:length
  i32.const 2
  i32.const 1
  i32.const 688
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $0
  i32.const 0
  i32.const 1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
  local.set $2
  local.get $1
  local.get $0
  local.get $2
  call $~lib/map/Map<usize,i32>#set
  drop
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  local.get $3
  call $~lib/array/Array<usize>#get:length
  local.set $6
  local.get $6
  i32.const 1
  i32.and
  i32.const 0
  i32.eq
  i32.const 944
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  i32.const 1
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $3
  i32.store $0
  i32.const 0
  local.set $4
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $~lib/string/String.__eq
  local.set $4
  local.get $0
  i32.load $0
  local.set $5
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<~lib/string/String>
  i32.const 0
  i32.eqz
  drop
  local.get $5
  i32.eqz
  if (result i32)
   local.get $3
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $3
   local.get $1
   i32.const 0
   i32.const 2
   global.set $~argumentsLength
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>@varargs
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 1232
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  else
   local.get $1
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  end
  local.get $4
  local.get $5
  i32.xor
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|0~anonymous|0
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 128
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/__tests__/d64.spec/removeTrailing
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 128
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 192
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  i32.const 1312
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/__tests__/d64.spec/removeTrailing
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 1376
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 192
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  i32.const 1440
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/__tests__/d64.spec/removeTrailing
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 1504
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 192
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  i32.const 1568
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=16
  local.get $0
  call $assembly/__tests__/d64.spec/removeTrailing
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=12
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 1632
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.const 192
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=8
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|0
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 80
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 1696
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/decimal/d64/D64#removeTrailing0 (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i64.load $0
  i32.const 10
  call $~lib/number/U64#toString
  local.tee $1
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=8
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 0
   i32.eq
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  loop $while-continue|1
   local.get $1
   i32.const -1
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/string/String#slice
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=4
   local.get $4
   i32.const 624
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0 offset=8
   local.get $4
   call $~lib/string/String.__eq
   local.set $3
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.const 0
    i32.const -1
    call $~lib/string/String#slice
    local.tee $1
    i32.store $0
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|1
   end
  end
  local.get $0
  local.get $0
  i64.load $0
  f64.const 10
  local.get $0
  i32.load8_u $0 offset=8
  local.get $2
  i32.sub
  f64.convert_i32_u
  call $~lib/math/NativeMath.pow
  i64.trunc_sat_f64_u
  i64.div_u
  call $assembly/decimal/d64/D64#set:value
  local.get $0
  local.get $2
  call $assembly/decimal/d64/D64#set:precision
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/decimal/d64/D64#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  local.get $0
  i32.load8_u $0 offset=9
  if
   i32.const 1856
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $0
  call $assembly/decimal/d64/D64#removeTrailing0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i64.load $0
  i32.const 10
  call $~lib/number/U64#toString
  local.tee $1
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=8
  i32.const 0
  i32.eq
  if
   local.get $1
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $1
  i32.const 0
  local.get $1
  call $~lib/string/String#get:length
  local.get $0
  i32.load8_u $0 offset=8
  i32.sub
  call $~lib/string/String#slice
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 656
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  local.get $1
  call $~lib/string/String#get:length
  local.get $0
  i32.load8_u $0 offset=8
  i32.sub
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/string/String#slice
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|0
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $assembly/decimal/d64/D64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9792
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 9824
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 100
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $assembly/decimal/d64/D64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9792
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 9872
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 101
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $assembly/decimal/d64/D64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9920
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 9952
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $assembly/decimal/d64/D64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 10000
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 10032
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 443712358665183680
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $assembly/decimal/d64/D64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 10080
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 10144
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64> (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  i32.const 3
  i32.const 3
  i32.eq
  drop
  i32.const 1
  drop
  i32.const 0
  i32.const 8
  i32.const 7
  i32.const 10736
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $0
  i64.const 4294967295
  i64.and
  i32.wrap_i64
  local.get $0
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedLong
  local.set $2
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.const 7
  i32.const 10816
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $0
  f64.convert_i32_u
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
  local.set $2
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.const 9
  i32.const 10896
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $0
  f64.convert_i32_u
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
  local.set $2
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/decimal/d64/D64#__aspectAddReflectedValueKeyValuePairs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  local.get $3
  i64.const 4733438614275358720
  i32.const 0
  call $~lib/staticarray/StaticArray<i64>#includes
  i32.eqz
  if
   local.get $1
   i32.const 10704
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
   local.get $1
   local.get $0
   i64.load $0
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64>
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
  end
  local.get $3
  i64.const 4745330659885580288
  i32.const 0
  call $~lib/staticarray/StaticArray<i64>#includes
  i32.eqz
  if
   local.get $1
   i32.const 10768
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u8>
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
  end
  local.get $3
  i64.const 4749468039659913216
  i32.const 0
  call $~lib/staticarray/StaticArray<i64>#includes
  i32.eqz
  if
   local.get $1
   i32.const 10848
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectKey
   local.get $1
   local.get $0
   i32.load8_u $0 offset=9
   local.get $2
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/__aspectPushReflectedObjectValue
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/decimal/d64/D64> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 1
  drop
  local.get $0
  i32.const 0
  i32.eq
  if
   i32.const 1
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 4
   i32.const 1
   i32.const 8
   i32.const 10640
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store $0
   local.get $4
   i32.const 0
   i32.const 0
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  i32.eqz
  drop
  local.get $1
  local.get $0
  call $~lib/map/Map<usize,i32>#has
  if
   local.get $1
   local.get $0
   call $~lib/map/Map<usize,i32>#get
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.const 0
  i32.const 10
  local.get $0
  i32.const 0
  local.get $0
  local.set $2
  local.get $2
  i32.const 16
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.const 8
  i32.const 10640
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.const 0
  i32.const 1
  i32.const 1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
  local.set $2
  local.get $1
  local.get $0
  local.get $2
  call $~lib/map/Map<usize,i32>#set
  drop
  local.get $0
  local.get $2
  local.get $1
  i32.const 0
  i32.const 12
  i32.const 10672
  call $~lib/rt/__newBuffer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0 offset=4
  local.get $4
  call $assembly/decimal/d64/D64#__aspectAddReflectedValueKeyValuePairs
  local.get $2
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<assembly/decimal/d64/D64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.set $4
  local.get $1
  local.set $5
  local.get $3
  call $~lib/array/Array<usize>#get:length
  local.set $6
  local.get $6
  i32.const 1
  i32.and
  i32.const 0
  i32.eq
  i32.const 944
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  i32.const 0
  drop
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $6
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $4
    local.get $5
    local.get $3
    local.get $7
    call $~lib/array/Array<usize>#__uget
    local.get $3
    local.get $7
    i32.const 1
    i32.add
    call $~lib/array/Array<usize>#__uget
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
    if
     global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $10
     return
    end
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  local.get $2
  call $~lib/array/Array<usize>#get:length
  local.set $7
  i32.const 0
  local.set $8
  loop $for-loop|1
   local.get $8
   local.get $7
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $5
    local.get $2
    local.get $8
    call $~lib/array/Array<usize>#__uget
    local.get $2
    local.get $8
    i32.const 1
    i32.add
    call $~lib/array/Array<usize>#__uget
    call $node_modules/@as-pect/assembly/assembly/internal/Reflect/pairSeen
    if
     global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.DEFER_MATCH
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $10
     return
    end
    local.get $8
    i32.const 2
    i32.add
    local.set $8
    br $for-loop|1
   end
  end
  i32.const 0
  drop
  i32.const 0
  drop
  local.get $2
  local.get $4
  call $~lib/array/Array<usize>#push
  drop
  local.get $2
  local.get $5
  call $~lib/array/Array<usize>#push
  drop
  i32.const 0
  local.set $8
  i32.const 0
  drop
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  i32.const 0
  i32.const 12
  i32.const 10976
  call $~lib/rt/__newBuffer
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  call $assembly/decimal/d64/D64#__aspectStrictEquals
  local.set $8
  local.get $8
  if
   local.get $3
   local.get $4
   call $~lib/array/Array<usize>#push
   drop
   local.get $3
   local.get $5
   call $~lib/array/Array<usize>#push
   drop
  end
  local.get $2
  call $~lib/array/Array<usize>#pop
  drop
  local.get $2
  call $~lib/array/Array<usize>#pop
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
  local.get $8
  select
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $3
  i32.store $0
  i32.const 0
  local.set $4
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $3
  local.get $1
  call $assembly/decimal/d64/D64.equal
  local.set $4
  local.get $0
  i32.load $0
  local.set $5
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<assembly/decimal/d64/D64>
  i32.const 0
  i32.eqz
  drop
  local.get $5
  i32.eqz
  if (result i32)
   local.get $3
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $3
   local.get $1
   i32.const 0
   i32.const 2
   global.set $~argumentsLength
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<assembly/decimal/d64/D64>@varargs
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 1232
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  else
   local.get $1
   local.get $5
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<assembly/decimal/d64/D64>
  end
  local.get $4
  local.get $5
  i32.xor
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/__tests__/d64.spec/UT#execute (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 128
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 128
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $0
  i32.load8_u $0 offset=4
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 10320
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=120
  local.get $2
  local.get $0
  i32.load $0
  i64.load $0
  i32.const 10
  call $~lib/number/U64#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=124
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=112
  local.get $2
  i32.const 10384
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=116
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=104
  local.get $2
  local.get $0
  i32.load $0
  i32.load8_u $0 offset=8
  i32.const 10
  call $~lib/number/U8#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=108
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=96
  local.get $2
  i32.const 10416
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=100
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=88
  local.get $2
  local.get $0
  i32.load8_u $0 offset=4
  i32.const 10
  call $~lib/number/U8#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=92
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=80
  local.get $2
  i32.const 10480
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=84
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=72
  local.get $2
  local.get $0
  i32.load $0 offset=8
  i64.load $0
  i32.const 10
  call $~lib/number/U64#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=76
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=64
  local.get $2
  i32.const 10528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=68
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=56
  local.get $2
  local.get $0
  i32.load $0 offset=8
  i32.load8_u $0 offset=8
  i32.const 10
  call $~lib/number/U8#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=60
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=48
  local.get $2
  i32.const 10560
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=52
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=40
  local.get $2
  local.get $1
  i64.load $0
  i32.const 10
  call $~lib/number/U64#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=44
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=32
  local.get $2
  i32.const 10528
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=36
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=24
  local.get $2
  local.get $1
  i32.load8_u $0 offset=8
  i32.const 10
  call $~lib/number/U8#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=28
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  i32.const 10608
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=20
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 128
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/__tests__/d64.spec/UT>#forEach (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.set $2
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   local.tee $4
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store $0
    local.get $6
    local.get $2
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|1
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 10
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=4
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.const 0
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 1
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/__tests__/d64.spec/UT#constructor
  call $~lib/array/Array<assembly/__tests__/d64.spec/UT>#__uset
  local.get $0
  i32.const 1
  i32.const 0
  i32.const 0
  i64.const 10
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 1
  i32.const 0
  i64.const 101
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $assembly/__tests__/d64.spec/UT#constructor
  call $~lib/array/Array<assembly/__tests__/d64.spec/UT>#__uset
  local.get $0
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  i32.const 11120
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/array/Array<assembly/__tests__/d64.spec/UT>#forEach
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 1
  call $assembly/decimal/d64/D64#changePrecision
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 11152
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  local.get $0
  i32.const 2
  call $assembly/decimal/d64/D64#changePrecision
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i64.const 100
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 11216
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  local.get $0
  i32.const 0
  call $assembly/decimal/d64/D64#changePrecision
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 11296
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 11
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 11360
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 653833540623822080
  i32.const 16
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 4
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 11360
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const -1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 11440
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 225992966659729408
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 7
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 11488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 209731588453451168
  i32.const 4
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 16
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  i32.const 11488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|2
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 11616
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i64.const 100
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 11728
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 11856
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#get:not
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 11968
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=16
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#get:not
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  i32.const 12048
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|3
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 11
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.lt
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12224
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 9
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.gt
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12304
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.lte
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12400
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.gte
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12512
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 110
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.lt
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12624
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.gt
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12720
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 100
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.lte
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12816
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.gte
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 12928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.lte
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#get:not
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 13040
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.gte
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#get:not
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 13120
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.lt
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#get:not
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 13200
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.gt
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#get:not
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  i32.const 13264
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|4
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 2
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13392
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 11
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const -1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.add
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 11440
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.add
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13600
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  call $assembly/decimal/d64/D64.add
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13648
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|5
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.sub
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 9
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13392
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.sub
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 9
  i32.const 2
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.sub
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13808
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.sub
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13600
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  call $assembly/decimal/d64/D64.sub
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13648
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|6
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 100
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13392
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const -1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.mul
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13808
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.mul
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13600
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  call $assembly/decimal/d64/D64.mul
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13648
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1~anonymous|7
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.div
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13392
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 10
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 1
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.div
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=20
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<assembly/decimal/d64/D64>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i64.const 100
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  i32.const 13488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=16
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 1
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.tee $1
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.div
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 14032
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i64.const 0
  i32.const 0
  i32.const 1
  call $assembly/decimal/d64/D64#constructor
  local.tee $0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64.div
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13600
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  call $assembly/decimal/d64/D64.div
  local.tee $2
  i32.store $0 offset=24
  local.get $2
  i32.load8_u $0 offset=9
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<bool>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=8
  local.get $3
  i32.const 13648
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#toBeTruthy
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|1
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 1808
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 10224
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 10256
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 11536
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 11568
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 12112
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 12144
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 13328
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 13360
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 13728
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 13760
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 13872
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 13904
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 13952
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  i32.const 13984
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 14096
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-big/assembly/Big/BigOfString.validate (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  i32.const 0
  local.set $1
  i32.const 0
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $0
   call $~lib/string/String#get:length
   i32.lt_s
   local.set $6
   local.get $6
   if
    block $for-continue|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $5
     call $~lib/string/String#charAt
     local.tee $7
     i32.store $0
     local.get $7
     i32.const 23504
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     call $~lib/string/String.__eq
     if (result i32)
      i32.const 1
     else
      local.get $7
      i32.const 23536
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      call $~lib/string/String.__eq
     end
     if (result i32)
      local.get $5
      i32.const 0
      i32.eq
      if (result i32)
       i32.const 1
      else
       local.get $2
      end
     else
      i32.const 0
     end
     if
      br $for-continue|0
     end
     local.get $7
     i32.const 656
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     call $~lib/string/String.__eq
     if (result i32)
      local.get $4
      i32.eqz
     else
      i32.const 0
     end
     if (result i32)
      local.get $1
      i32.eqz
     else
      i32.const 0
     end
     if
      i32.const 1
      local.set $4
      br $for-continue|0
     end
     local.get $7
     i32.const 23568
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store $0 offset=4
     local.get $9
     call $~lib/string/String.__eq
     if (result i32)
      local.get $3
     else
      i32.const 0
     end
     if (result i32)
      local.get $1
      i32.eqz
     else
      i32.const 0
     end
     if
      i32.const 1
      local.set $1
      i32.const 1
      local.set $2
      br $for-continue|0
     end
     local.get $7
     i32.const 0
     call $~lib/number/U8.parseInt
     local.set $8
     local.get $8
     i32.const 255
     i32.and
     i32.const 0
     i32.eq
     if (result i32)
      local.get $7
      i32.const 624
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      call $~lib/string/String.__ne
     else
      i32.const 0
     end
     if (result i32)
      i32.const 1
     else
      local.get $8
      f64.convert_i32_u
      call $~lib/number/F64.isFinite
      i32.eqz
     end
     if
      i32.const 23600
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=16
      local.get $9
      local.get $7
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=4
      local.get $9
      i32.const 23664
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=12
      local.get $9
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0 offset=8
      local.get $9
      local.get $0
      call $~lib/string/String.__concat
      i32.const 23696
      i32.const 1070
      i32.const 17
      call $~lib/builtins/abort
      unreachable
     end
     i32.const 0
     local.set $2
     i32.const 1
     local.set $3
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/as-big/assembly/Big/BigOfString#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 17
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  i32.const 0
  local.set $5
  i32.const 0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/string/String#toLowerCase
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  call $~lib/as-big/assembly/Big/BigOfString.validate
  local.get $1
  i32.const 0
  call $~lib/string/String#charAt
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  i32.const 23536
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 1
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/string/String#slice
   local.tee $1
   i32.store $0 offset=4
  end
  local.get $1
  i32.const 0
  call $~lib/string/String#charAt
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=8
  local.get $10
  i32.const 23504
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  call $~lib/string/String.__eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 1
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/string/String#slice
   local.tee $1
   i32.store $0 offset=4
   i32.const -1
  else
   i32.const 1
  end
  local.set $2
  local.get $1
  i32.const 656
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  i32.const 0
  call $~lib/string/String#indexOf
  local.tee $6
  i32.const -1
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 656
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=12
   local.get $10
   i32.const 192
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=16
   local.get $10
   call $~lib/string/String#replace
   local.tee $1
   i32.store $0 offset=4
  end
  local.get $1
  i32.const 23568
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=12
  local.get $10
  i32.const 0
  call $~lib/string/String#indexOf
  local.tee $5
  i32.const 0
  i32.gt_s
  if
   local.get $6
   i32.const 0
   i32.lt_s
   if
    local.get $5
    local.set $6
   end
   local.get $6
   local.get $1
   local.get $5
   i32.const 1
   i32.add
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/string/String#slice
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0 offset=8
   local.get $10
   i32.const 0
   call $~lib/number/I32.parseInt
   i32.add
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 0
   local.get $5
   call $~lib/string/String#substring
   local.tee $1
   i32.store $0 offset=4
  else
   local.get $6
   i32.const 0
   i32.lt_s
   if
    local.get $1
    call $~lib/string/String#get:length
    local.set $6
   end
  end
  local.get $1
  call $~lib/string/String#get:length
  local.set $7
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $7
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $5
    call $~lib/string/String#charAt
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=8
    local.get $10
    i32.const 624
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=12
    local.get $10
    call $~lib/string/String.__eq
   else
    i32.const 0
   end
   local.set $8
   local.get $8
   if
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $5
  local.get $7
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 1
   call $~lib/array/Array<u8>#constructor
   local.tee $4
   i32.store $0 offset=20
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/array/Array<u8>#__uset
   i32.const 0
   local.set $3
   i32.const 1
   local.set $2
  else
   loop $for-loop|1
    local.get $7
    i32.const 0
    i32.gt_s
    if (result i32)
     local.get $1
     local.get $7
     i32.const 1
     i32.sub
     local.tee $7
     call $~lib/string/String#charAt
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=8
     local.get $10
     i32.const 624
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=12
     local.get $10
     call $~lib/string/String.__eq
    else
     i32.const 0
    end
    local.set $8
    local.get $8
    if
     nop
     br $for-loop|1
    end
   end
   local.get $6
   local.get $5
   i32.sub
   i32.const 1
   i32.sub
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $7
   local.get $5
   i32.sub
   i32.const 1
   i32.add
   call $~lib/array/Array<u8>#constructor
   local.tee $4
   i32.store $0 offset=20
   i32.const 0
   local.set $6
   loop $for-loop|2
    local.get $5
    local.get $7
    i32.le_s
    local.set $8
    local.get $8
    if
     local.get $4
     local.get $6
     local.tee $9
     i32.const 1
     i32.add
     local.set $6
     local.get $9
     local.get $1
     local.get $5
     local.tee $9
     i32.const 1
     i32.add
     local.set $5
     local.get $9
     call $~lib/string/String#charAt
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=8
     local.get $10
     i32.const 0
     call $~lib/number/U8.parseInt
     call $~lib/array/Array<u8>#__uset
     br $for-loop|2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $2
  local.get $3
  local.get $4
  call $~lib/as-big/assembly/Big/Big#constructor
  local.tee $0
  i32.store $0
  local.get $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/as-big/assembly/Big/Big#__stringify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill $0
  local.get $0
  i32.load $0 offset=4
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  i32.const 192
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=4
  local.get $7
  call $~lib/array/Array<u8>#join
  local.tee $4
  i32.store $0 offset=8
  local.get $4
  call $~lib/string/String#get:length
  local.set $5
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.const 0
   call $~lib/string/String#charAt
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=20
   local.get $7
   local.get $5
   i32.const 1
   i32.gt_s
   if (result i32)
    i32.const 656
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=28
    local.get $7
    local.get $4
    i32.const 1
    global.get $~lib/builtins/i32.MAX_VALUE
    call $~lib/string/String#slice
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0 offset=32
    local.get $7
    call $~lib/string/String.__concat
   else
    i32.const 192
   end
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=24
   local.get $7
   call $~lib/string/String.__concat
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $7
   local.get $3
   i32.const 0
   i32.lt_s
   if (result i32)
    i32.const 23568
   else
    i32.const 24976
   end
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=16
   local.get $7
   call $~lib/string/String.__concat
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $3
   i32.const 10
   call $~lib/number/I32#toString
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=4
   local.get $7
   call $~lib/string/String.__concat
   local.tee $4
   i32.store $0 offset=8
  else
   local.get $3
   i32.const 0
   i32.lt_s
   if
    loop $for-loop|0
     local.get $3
     i32.const 1
     i32.add
     local.tee $3
     local.set $6
     local.get $6
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 624
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      local.get $7
      local.get $4
      call $~lib/string/String.__concat
      local.tee $4
      i32.store $0 offset=8
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 25008
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    local.get $7
    local.get $4
    call $~lib/string/String.__concat
    local.tee $4
    i32.store $0 offset=8
   else
    local.get $3
    i32.const 0
    i32.gt_s
    if
     local.get $3
     i32.const 1
     i32.add
     local.tee $3
     local.get $5
     i32.gt_s
     if
      local.get $3
      local.get $5
      i32.sub
      local.set $3
      loop $for-loop|1
       local.get $3
       local.tee $6
       i32.const 1
       i32.sub
       local.set $3
       local.get $6
       local.set $6
       local.get $6
       if
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.const 624
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store $0 offset=4
        local.get $7
        call $~lib/string/String.__concat
        local.tee $4
        i32.store $0 offset=8
        br $for-loop|1
       end
      end
     else
      local.get $3
      local.get $5
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.const 0
       local.get $3
       call $~lib/string/String#slice
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0 offset=12
       local.get $7
       i32.const 656
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0 offset=16
       local.get $7
       call $~lib/string/String.__concat
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0
       local.get $7
       local.get $4
       local.get $3
       global.get $~lib/builtins/i32.MAX_VALUE
       call $~lib/string/String#slice
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store $0 offset=4
       local.get $7
       call $~lib/string/String.__concat
       local.tee $4
       i32.store $0 offset=8
      end
     end
    else
     local.get $5
     i32.const 1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.const 0
      call $~lib/string/String#charAt
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=12
      local.get $7
      i32.const 656
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=16
      local.get $7
      call $~lib/string/String.__concat
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      local.get $7
      local.get $4
      i32.const 1
      global.get $~lib/builtins/i32.MAX_VALUE
      call $~lib/string/String#slice
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=4
      local.get $7
      call $~lib/string/String.__concat
      local.tee $4
      i32.store $0 offset=8
     end
    end
   end
  end
  local.get $0
  i32.load8_s $0
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
  else
   i32.const 0
  end
  if (result i32)
   i32.const 23504
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   local.get $4
   call $~lib/string/String.__concat
  else
   local.get $4
  end
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/as-big/assembly/Big/Big#toString (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $1
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result i32)
   local.get $1
   f64.const 10
   f64.ne
  else
   i32.const 0
  end
  if
   i32.const 23776
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/number/F64#toString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=4
   local.get $2
   call $~lib/string/String.__concat
   i32.const 23696
   i32.const 886
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $0
  i32.load $0 offset=4
  global.get $~lib/as-big/assembly/Big/Big.NE
  i32.le_s
  if (result i32)
   i32.const 1
  else
   local.get $0
   i32.load $0 offset=4
   global.get $~lib/as-big/assembly/Big/Big.PE
   i32.ge_s
  end
  local.get $0
  i32.load $0 offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0
  local.get $2
  i32.const 0
  call $~lib/array/Array<u8>#__uget
  i32.eqz
  i32.eqz
  call $~lib/as-big/assembly/Big/Big#__stringify
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/as-big/assembly/Big/Big.copyOf (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  local.get $0
  i32.load8_s $0
  local.get $0
  i32.load $0 offset=4
  local.get $0
  i32.load $0 offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#slice
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/as-big/assembly/Big/Big#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/as-big/assembly/Big/Big#minus<~lib/as-big/assembly/Big/Big> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/as-big/assembly/Big/Big.copyOf
  local.tee $2
  i32.store $0
  local.get $0
  local.get $2
  call $~lib/as-big/assembly/Big/Big#eq<~lib/as-big/assembly/Big/Big>
  if
   global.get $~lib/as-big/assembly/Big/Big.ZERO
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  end
  local.get $0
  local.set $7
  local.get $7
  i32.load8_s $0
  local.set $8
  local.get $2
  i32.load8_s $0
  local.set $9
  local.get $8
  local.get $9
  i32.ne
  if
   local.get $2
   i32.const 0
   local.get $9
   i32.sub
   call $~lib/as-big/assembly/Big/Big#set:s
   local.get $7
   local.get $2
   call $~lib/as-big/assembly/Big/Big#plus<~lib/as-big/assembly/Big/Big>
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.load $0 offset=8
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store $0 offset=4
  local.get $18
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#slice
  local.tee $10
  i32.store $0 offset=8
  local.get $7
  i32.load $0 offset=4
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $12
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  local.set $13
  local.get $10
  i32.const 0
  call $~lib/array/Array<u8>#__uget
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $12
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   i32.eqz
  end
  if
   local.get $12
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   if
    local.get $2
    i32.const 0
    local.get $9
    i32.sub
    call $~lib/as-big/assembly/Big/Big#set:s
   else
    local.get $10
    i32.const 0
    call $~lib/array/Array<u8>#__uget
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     call $~lib/as-big/assembly/Big/Big.copyOf
     local.tee $2
     i32.store $0
    else
     local.get $2
     i32.const 1
     call $~lib/as-big/assembly/Big/Big#set:s
    end
   end
   local.get $2
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  end
  local.get $11
  local.get $13
  i32.sub
  local.tee $14
  if
   local.get $14
   i32.const 0
   i32.lt_s
   local.tee $6
   if
    i32.const 0
    local.get $14
    i32.sub
    local.set $14
    local.get $10
    local.set $5
   else
    local.get $11
    local.set $13
    local.get $12
    local.set $5
   end
   local.get $5
   call $~lib/array/Array<u8>#reverse
   drop
   local.get $14
   local.set $15
   loop $for-loop|0
    local.get $15
    local.tee $16
    i32.const 1
    i32.sub
    local.set $15
    local.get $16
    local.set $16
    local.get $16
    if
     local.get $5
     i32.const 0
     call $~lib/array/Array<u8>#push
     drop
     br $for-loop|0
    end
   end
   local.get $5
   call $~lib/array/Array<u8>#reverse
   drop
  else
   local.get $10
   call $~lib/array/Array<u8>#get:length
   local.get $12
   call $~lib/array/Array<u8>#get:length
   i32.lt_s
   local.tee $6
   if (result i32)
    local.get $10
   else
    local.get $12
   end
   local.set $18
   global.get $~lib/memory/__stack_pointer
   local.get $18
   i32.store $0 offset=4
   local.get $18
   call $~lib/array/Array<u8>#get:length
   local.set $4
   i32.const 0
   local.tee $15
   local.set $14
   block $for-break1
    loop $for-loop|1
     local.get $15
     local.get $4
     i32.lt_s
     local.set $16
     local.get $16
     if
      local.get $10
      local.get $15
      call $~lib/array/Array<u8>#__uget
      local.get $12
      local.get $15
      call $~lib/array/Array<u8>#__uget
      i32.ne
      if
       local.get $10
       local.get $15
       call $~lib/array/Array<u8>#__uget
       local.get $12
       local.get $15
       call $~lib/array/Array<u8>#__uget
       i32.lt_u
       local.set $6
       br $for-break1
      end
      local.get $15
      i32.const 1
      i32.add
      local.set $15
      br $for-loop|1
     end
    end
   end
  end
  local.get $6
  if
   local.get $10
   local.set $5
   local.get $12
   local.set $10
   local.get $5
   local.set $12
   local.get $2
   i32.const 0
   local.get $2
   i32.load8_s $0
   i32.sub
   call $~lib/as-big/assembly/Big/Big#set:s
  end
  local.get $12
  call $~lib/array/Array<u8>#get:length
  local.tee $4
  local.get $10
  call $~lib/array/Array<u8>#get:length
  local.tee $3
  i32.sub
  local.tee $15
  i32.const 0
  i32.gt_s
  if
   loop $for-loop|2
    local.get $15
    local.tee $16
    i32.const 1
    i32.sub
    local.set $15
    local.get $16
    local.set $16
    local.get $16
    if
     local.get $10
     local.get $3
     local.tee $17
     i32.const 1
     i32.add
     local.set $3
     local.get $17
     i32.const 0
     call $~lib/array/Array<u8>#__set
     br $for-loop|2
    end
   end
  end
  local.get $3
  local.set $15
  loop $for-loop|3
   local.get $4
   local.get $14
   i32.gt_s
   local.set $16
   local.get $16
   if
    local.get $10
    local.get $4
    i32.const 1
    i32.sub
    local.tee $4
    call $~lib/array/Array<u8>#__uget
    local.get $12
    local.get $4
    call $~lib/array/Array<u8>#__uget
    i32.lt_u
    if
     local.get $4
     local.set $3
     loop $for-loop|4
      local.get $3
      if (result i32)
       local.get $10
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       call $~lib/array/Array<u8>#__uget
       i32.eqz
      else
       i32.const 0
      end
      local.set $17
      local.get $17
      if
       local.get $10
       local.get $3
       i32.const 9
       call $~lib/array/Array<u8>#__uset
       br $for-loop|4
      end
     end
     local.get $10
     local.get $3
     local.get $10
     local.get $3
     call $~lib/array/Array<u8>#__uget
     i32.const 1
     i32.sub
     call $~lib/array/Array<u8>#__uset
     local.get $10
     local.get $4
     local.get $10
     local.get $4
     call $~lib/array/Array<u8>#__uget
     i32.const 10
     i32.add
     call $~lib/array/Array<u8>#__uset
    end
    local.get $10
    local.get $4
    local.get $10
    local.get $4
    call $~lib/array/Array<u8>#__uget
    local.get $12
    local.get $4
    call $~lib/array/Array<u8>#__uget
    i32.sub
    call $~lib/array/Array<u8>#__uset
    br $for-loop|3
   end
  end
  loop $for-loop|5
   local.get $10
   local.get $15
   i32.const 1
   i32.sub
   local.tee $15
   call $~lib/array/Array<u8>#__uget
   i32.const 0
   i32.eq
   local.set $16
   local.get $16
   if
    local.get $10
    call $~lib/array/Array<u8>#pop
    drop
    br $for-loop|5
   end
  end
  loop $for-loop|6
   local.get $10
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   i32.const 0
   i32.eq
   local.set $16
   local.get $16
   if
    local.get $10
    call $~lib/array/Array<u8>#shift
    drop
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    br $for-loop|6
   end
  end
  local.get $10
  i32.const 0
  call $~lib/array/Array<u8>#__uget
  i32.eqz
  if
   local.get $2
   i32.const 1
   call $~lib/as-big/assembly/Big/Big#set:s
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 1
   call $~lib/array/Array<u8>#constructor
   local.tee $10
   i32.store $0 offset=8
   local.get $10
   i32.const 0
   i32.const 0
   call $~lib/array/Array<u8>#__uset
   i32.const 0
   local.set $13
  end
  local.get $2
  local.get $10
  call $~lib/as-big/assembly/Big/Big#set:c
  local.get $2
  local.get $13
  call $~lib/as-big/assembly/Big/Big#set:e
  local.get $2
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|2~anonymous|0
  (local $0 i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 80
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 80
  memory.fill $0
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   i32.const 1000
   i32.lt_s
   local.set $1
   local.get $1
   if
    call $~lib/math/NativeMath.random
    f64.const 1844674407370955264
    f64.const 2
    f64.div
    f64.mul
    call $~lib/math/NativeMath.round
    i64.trunc_sat_f64_u
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.const 10
    call $~lib/number/U64#toString
    local.tee $3
    i32.store $0
    call $~lib/math/NativeMath.random
    local.get $3
    call $~lib/string/String#get:length
    f64.convert_i32_s
    f64.mul
    call $~lib/math/NativeMath.round
    i32.trunc_sat_f64_u
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    local.get $2
    local.get $4
    i32.const 0
    call $assembly/decimal/d64/D64#constructor
    local.tee $5
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 0
    local.get $3
    call $~lib/string/String#get:length
    local.get $4
    i32.const 255
    i32.and
    i32.sub
    call $~lib/string/String#slice
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    i32.const 656
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=20
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    local.get $3
    local.get $3
    call $~lib/string/String#get:length
    local.get $4
    i32.const 255
    i32.and
    i32.sub
    global.get $~lib/builtins/i32.MAX_VALUE
    call $~lib/string/String#slice
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    call $~lib/string/String.__concat
    local.tee $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    call $~lib/as-big/assembly/Big/Big.of<~lib/string/String>
    local.tee $6
    i32.store $0 offset=24
    local.get $5
    call $assembly/decimal/d64/D64#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=20
    local.get $14
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    local.get $6
    f64.const 10
    call $~lib/as-big/assembly/Big/Big#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    i32.const 25040
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=48
    local.get $14
    local.get $2
    i32.const 10
    call $~lib/number/U64#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=52
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=40
    local.get $14
    i32.const 25120
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=44
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=32
    local.get $14
    local.get $4
    i32.const 10
    call $~lib/number/U8#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=36
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=20
    local.get $14
    i32.const 10608
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=28
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
    call $~lib/math/NativeMath.random
    f64.const 1844674407370955264
    f64.const 2
    f64.div
    f64.mul
    call $~lib/math/NativeMath.round
    i64.trunc_sat_f64_u
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.const 10
    call $~lib/number/U64#toString
    local.tee $7
    i32.store $0 offset=56
    call $~lib/math/NativeMath.random
    local.get $7
    call $~lib/string/String#get:length
    f64.convert_i32_s
    local.set $9
    local.get $4
    f64.convert_i32_u
    local.set $8
    local.get $9
    local.get $8
    f64.min
    f64.mul
    call $~lib/math/NativeMath.round
    i32.trunc_sat_f64_u
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    local.get $2
    local.get $4
    i32.const 0
    call $assembly/decimal/d64/D64#constructor
    local.tee $10
    i32.store $0 offset=60
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.const 0
    local.get $7
    call $~lib/string/String#get:length
    local.get $4
    i32.const 255
    i32.and
    i32.sub
    call $~lib/string/String#slice
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    i32.const 656
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=20
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    local.get $7
    local.get $7
    call $~lib/string/String#get:length
    local.get $4
    i32.const 255
    i32.and
    i32.sub
    global.get $~lib/builtins/i32.MAX_VALUE
    call $~lib/string/String#slice
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    call $~lib/string/String.__concat
    local.tee $7
    i32.store $0 offset=56
    global.get $~lib/memory/__stack_pointer
    local.get $7
    call $~lib/as-big/assembly/Big/Big.of<~lib/string/String>
    local.tee $11
    i32.store $0 offset=64
    local.get $10
    call $assembly/decimal/d64/D64#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=20
    local.get $14
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    local.get $11
    f64.const 10
    call $~lib/as-big/assembly/Big/Big#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=12
    local.get $14
    i32.const 25040
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=48
    local.get $14
    local.get $2
    i32.const 10
    call $~lib/number/U64#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=52
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=40
    local.get $14
    i32.const 25120
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=44
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=32
    local.get $14
    local.get $4
    i32.const 10
    call $~lib/number/U8#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=36
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=20
    local.get $14
    i32.const 10608
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=28
    local.get $14
    call $~lib/string/String.__concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=16
    local.get $14
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
    global.get $~lib/memory/__stack_pointer
    local.get $5
    local.get $10
    call $assembly/decimal/d64/D64.add
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    call $assembly/decimal/d64/D64#toString
    local.tee $12
    i32.store $0 offset=68
    global.get $~lib/memory/__stack_pointer
    local.get $6
    local.get $11
    call $~lib/as-big/assembly/Big/Big#plusBig
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store $0 offset=8
    local.get $14
    f64.const 10
    call $~lib/as-big/assembly/Big/Big#toString
    local.tee $13
    i32.store $0 offset=72
    local.get $13
    call $~lib/string/String#get:length
    i32.const 21
    i32.ge_s
    if
     local.get $5
     local.get $10
     call $assembly/decimal/d64/D64.add
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     local.get $14
     call $assembly/decimal/d64/D64#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=20
     local.get $14
     call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     i32.const 1856
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=12
     local.get $14
     i32.const 25168
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=52
     local.get $14
     local.get $5
     call $assembly/decimal/d64/D64#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=76
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=44
     local.get $14
     i32.const 25216
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=48
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=36
     local.get $14
     local.get $10
     call $assembly/decimal/d64/D64#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=40
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     local.get $14
     i32.const 25248
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=32
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=20
     local.get $14
     local.get $12
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
    else
     local.get $5
     local.get $10
     call $assembly/decimal/d64/D64.add
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     local.get $14
     call $assembly/decimal/d64/D64#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=20
     local.get $14
     call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=8
     local.get $14
     local.get $6
     local.get $11
     call $~lib/as-big/assembly/Big/Big#plusBig
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=20
     local.get $14
     f64.const 10
     call $~lib/as-big/assembly/Big/Big#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=12
     local.get $14
     i32.const 25168
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=40
     local.get $14
     local.get $5
     call $assembly/decimal/d64/D64#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=44
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=32
     local.get $14
     i32.const 25216
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=36
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=20
     local.get $14
     local.get $10
     call $assembly/decimal/d64/D64#toString
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=28
     local.get $14
     call $~lib/string/String.__concat
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store $0 offset=16
     local.get $14
     call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 80
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec~anonymous|2
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 14208
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 25280
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/test
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/d64.spec
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 336
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 368
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 512
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 32
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 1728
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/describe
  i32.const 1760
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 14128
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/describe
  call $~lib/as-big/assembly/Big/Big.zero
  global.set $~lib/as-big/assembly/Big/Big.ZERO
  i32.const 14160
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 25312
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/describe
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.le_s
  if
   i32.const 192
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store $0
  local.get $6
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.get $3
  i32.const 1
  i32.shl
  memory.copy $0 $0
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:_not
  local.get $0
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:actual
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:actual
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 832
   i32.const 880
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<usize,i32>#set (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  call $~lib/util/hash/HASH<usize>
  local.set $3
  local.get $0
  local.get $1
  local.get $3
  call $~lib/map/Map<usize,i32>#find
  local.set $4
  local.get $4
  if
   local.get $4
   local.get $2
   call $~lib/map/MapEntry<usize,i32>#set:value
   i32.const 0
   drop
  else
   local.get $0
   i32.load $0 offset=16
   local.get $0
   i32.load $0 offset=12
   i32.eq
   if
    local.get $0
    local.get $0
    i32.load $0 offset=20
    local.get $0
    i32.load $0 offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $0
     i32.load $0 offset=4
    else
     local.get $0
     i32.load $0 offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<usize,i32>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=8
   local.tee $5
   i32.store $0
   local.get $5
   local.get $0
   local.get $0
   i32.load $0 offset=16
   local.tee $6
   i32.const 1
   i32.add
   call $~lib/map/Map<usize,i32>#set:entriesOffset
   local.get $6
   i32.const 12
   i32.mul
   i32.add
   local.set $4
   local.get $4
   local.get $1
   call $~lib/map/MapEntry<usize,i32>#set:key
   i32.const 0
   drop
   local.get $4
   local.get $2
   call $~lib/map/MapEntry<usize,i32>#set:value
   i32.const 0
   drop
   local.get $0
   local.get $0
   i32.load $0 offset=20
   i32.const 1
   i32.add
   call $~lib/map/Map<usize,i32>#set:entriesCount
   local.get $0
   i32.load $0
   local.get $3
   local.get $0
   i32.load $0 offset=4
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $6
   local.get $4
   local.get $6
   i32.load $0
   call $~lib/map/MapEntry<usize,i32>#set:taggedNext
   local.get $6
   local.get $4
   i32.store $0
  end
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/map/Map<usize,i32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $~lib/map/Map<usize,i32>#set:buckets
  local.get $0
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<usize,i32>#set:bucketsMask
  local.get $0
  i32.const 0
  i32.const 4
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $~lib/map/Map<usize,i32>#set:entries
  local.get $0
  i32.const 4
  call $~lib/map/Map<usize,i32>#set:entriesCapacity
  local.get $0
  i32.const 0
  call $~lib/map/Map<usize,i32>#set:entriesOffset
  local.get $0
  i32.const 0
  call $~lib/map/Map<usize,i32>#set:entriesCount
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $1
   i32.store $0
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  local.get $3
  call $~lib/rt/__newBuffer
  local.tee $5
  i32.store $0
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.set $6
  local.get $6
  local.get $5
  i32.store $0
  local.get $6
  local.get $5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $6
  local.get $5
  i32.store $0 offset=4
  local.get $6
  local.get $4
  i32.store $0 offset=8
  local.get $6
  local.get $0
  i32.store $0 offset=12
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 5
    i32.const 1168
    call $~lib/rt/__newArray
    local.tee $2
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 5
   i32.const 1200
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/decimal/d64/D64#constructor (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  local.get $1
  call $assembly/decimal/d64/D64#set:value
  local.get $0
  local.get $2
  call $assembly/decimal/d64/D64#set:precision
  local.get $0
  local.get $3
  call $assembly/decimal/d64/D64#set:notANumber
  local.get $0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/util/number/utoa64 (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 1888
   i32.const 2016
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 624
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $0
    i32.wrap_i64
    local.set $3
    local.get $3
    call $~lib/util/number/decimalCount32
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $2
    local.set $7
    local.get $3
    local.set $6
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $6
    local.get $5
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $0
    call $~lib/util/number/decimalCount64High
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $2
    local.set $6
    local.get $0
    local.set $8
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $6
    local.get $8
    local.get $5
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $0
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $2
    local.set $3
    local.get $0
    local.set $8
    local.get $4
    local.set $7
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $3
    local.get $8
    local.get $7
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $2
    local.get $0
    local.get $4
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $2
  local.get $3
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 192
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0
  local.get $5
  local.get $0
  local.get $2
  memory.copy $0 $0
  local.get $5
  local.get $2
  i32.add
  local.get $1
  local.get $3
  memory.copy $0 $0
  local.get $5
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/__tests__/d64.spec/UT#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  local.get $1
  call $assembly/__tests__/d64.spec/UT#set:decimal
  local.get $0
  local.get $2
  call $assembly/__tests__/d64.spec/UT#set:wantedPrecision
  local.get $0
  local.get $3
  call $assembly/__tests__/d64.spec/UT#set:want
  local.get $0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#set:_not
  local.get $0
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#set:actual
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<assembly/decimal/d64/D64>#set:actual
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 1888
   i32.const 2016
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 624
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store $0
   local.get $2
   local.set $6
   local.get $0
   local.set $5
   local.get $3
   local.set $4
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $6
   local.get $5
   local.get $4
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $2
    local.set $6
    local.get $0
    local.set $5
    local.get $3
    local.set $4
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $6
    local.get $5
    i64.extend_i32_u
    local.get $4
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store $0
    local.get $2
    local.get $0
    i64.extend_i32_u
    local.get $3
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/decimal/d64/D64.equal (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.eq
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/decimal/d64/D64>@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $1
   i32.store $0
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<assembly/decimal/d64/D64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<assembly/decimal/d64/D64>@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 5
    i32.const 11056
    call $~lib/rt/__newArray
    local.tee $2
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 5
   i32.const 11088
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=4
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<assembly/decimal/d64/D64>
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 14
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#set:_not
  local.get $0
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#set:actual
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<bool>#set:actual
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $1
   i32.store $0
  end
  local.get $0
  local.get $1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<bool>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/decimal/d64/D64.lt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.lt_u
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/decimal/d64/D64.gt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.gt_u
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/decimal/d64/D64.lte (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.le_u
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/decimal/d64/D64.gte (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.ge_u
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/decimal/d64/D64.add (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    i64.const 0
    i32.const 0
    i32.const 1
    call $assembly/decimal/d64/D64#constructor
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.add
  local.set $5
  local.get $5
  local.get $2
  i64.load $0
  i64.lt_u
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 0
  local.get $5
  local.get $3
  i32.load8_u $0 offset=8
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/decimal/d64/D64.sub (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    i64.const 0
    i32.const 0
    i32.const 1
    call $assembly/decimal/d64/D64#constructor
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.sub
  local.set $5
  local.get $5
  local.get $2
  i64.load $0
  i64.gt_u
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 0
  local.get $5
  local.get $3
  i32.load8_u $0 offset=8
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/decimal/d64/D64.mul (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    i64.const 0
    i32.const 0
    i32.const 1
    call $assembly/decimal/d64/D64#constructor
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    return
   end
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.mul
  local.set $5
  local.get $5
  local.get $2
  i64.load $0
  i64.lt_u
  if (result i32)
   i32.const 1
  else
   local.get $5
   local.get $3
   i64.load $0
   i64.lt_u
  end
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 0
  local.get $5
  i32.const 2
  local.get $3
  i32.load8_u $0 offset=8
  i32.mul
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/decimal/d64/D64.div (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load8_u $0 offset=9
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load8_u $0 offset=9
  end
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.load8_u $0 offset=8
  call $assembly/decimal/d64/D64#changePrecision
  local.tee $2
  i32.store $0
  local.get $1
  local.set $3
  local.get $2
  local.set $4
  local.get $4
  i32.load8_u $0 offset=9
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.load8_u $0 offset=8
   call $assembly/decimal/d64/D64#changePrecision
   local.tee $2
   i32.store $0
   local.get $0
   local.set $3
   local.get $2
   local.set $4
   local.get $4
   i32.load8_u $0 offset=9
   if
    i32.const 0
    i64.const 0
    i32.const 0
    i32.const 1
    call $assembly/decimal/d64/D64#constructor
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    return
   end
  end
  local.get $3
  i64.load $0
  i64.const 0
  i64.eq
  if
   i32.const 0
   i64.const 0
   i32.const 0
   i32.const 1
   call $assembly/decimal/d64/D64#constructor
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  local.get $2
  i64.load $0
  local.get $3
  i64.load $0
  i64.div_u
  local.set $5
  i32.const 0
  local.get $5
  local.get $3
  i32.load8_u $0 offset=8
  i32.const 2
  i32.div_u
  i32.const 0
  call $assembly/decimal/d64/D64#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/string/String#toLowerCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  call $~lib/string/String#get:length
  local.set $1
  local.get $1
  i32.eqz
  if
   local.get $0
   local.set $19
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $19
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 2
  i32.mul
  i32.const 2
  i32.mul
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $1
   i32.lt_u
   local.set $5
   local.get $5
   if
    block $for-continue|0
     local.get $0
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.set $6
     local.get $6
     local.set $7
     local.get $7
     i32.const 7
     i32.shr_u
     i32.eqz
     if
      local.get $2
      local.get $3
      i32.const 1
      i32.shl
      i32.add
      block $~lib/util/string/toLower8|inlined.0 (result i32)
       local.get $6
       local.set $7
       i32.const 0
       i32.const 0
       i32.gt_s
       drop
       i32.const 14220
       local.get $7
       i32.add
       i32.load8_u $0
       br $~lib/util/string/toLower8|inlined.0
      end
      i32.store16 $0
     else
      local.get $6
      i32.const 55295
      i32.sub
      i32.const 56320
      i32.const 55295
      i32.sub
      i32.lt_u
      if (result i32)
       local.get $4
       local.get $1
       i32.const 1
       i32.sub
       i32.lt_u
      else
       i32.const 0
      end
      if
       local.get $0
       local.get $4
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0 offset=2
       local.set $7
       local.get $7
       i32.const 56319
       i32.sub
       i32.const 57344
       i32.const 56319
       i32.sub
       i32.lt_u
       if
        local.get $6
        local.set $8
        local.get $6
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        local.get $7
        i32.const 1023
        i32.and
        i32.or
        i32.const 65536
        i32.add
        local.set $6
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        local.get $6
        i32.const 131072
        i32.ge_u
        if
         local.get $2
         local.get $3
         i32.const 1
         i32.shl
         i32.add
         local.get $8
         local.get $7
         i32.const 16
         i32.shl
         i32.or
         i32.store $0
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-continue|0
        end
       end
      end
      local.get $6
      i32.const 304
      i32.eq
      if
       local.get $2
       local.get $3
       i32.const 1
       i32.shl
       i32.add
       i32.const 775
       i32.const 16
       i32.shl
       i32.const 105
       i32.or
       i32.store $0
       local.get $3
       i32.const 1
       i32.add
       local.set $3
      else
       local.get $6
       i32.const 931
       i32.eq
       if
        i32.const 963
        local.set $7
        local.get $1
        i32.const 1
        i32.gt_u
        if (result i32)
         block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
          local.get $0
          local.set $10
          local.get $4
          local.set $9
          local.get $1
          local.set $8
          i32.const 0
          local.set $11
          local.get $9
          local.set $12
          i32.const 0
          local.tee $13
          local.get $12
          i32.const 30
          i32.sub
          local.tee $14
          local.get $13
          local.get $14
          i32.gt_s
          select
          local.set $13
          loop $while-continue|1
           local.get $12
           local.get $13
           i32.gt_s
           local.set $14
           local.get $14
           if
            block $~lib/util/string/codePointBefore|inlined.0 (result i32)
             local.get $10
             local.set $16
             local.get $12
             local.set $15
             local.get $15
             i32.const 0
             i32.le_s
             if
              i32.const -1
              br $~lib/util/string/codePointBefore|inlined.0
             end
             local.get $16
             local.get $15
             i32.const 1
             i32.sub
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u $0
             local.set $17
             local.get $17
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             local.get $15
             i32.const 2
             i32.sub
             i32.const 0
             i32.ge_s
             i32.and
             if
              local.get $16
              local.get $15
              i32.const 2
              i32.sub
              i32.const 1
              i32.shl
              i32.add
              i32.load16_u $0
              local.set $18
              local.get $18
              i32.const 64512
              i32.and
              i32.const 55296
              i32.eq
              if
               local.get $18
               i32.const 1023
               i32.and
               i32.const 10
               i32.shl
               local.get $17
               i32.const 1023
               i32.and
               i32.add
               i32.const 65536
               i32.add
               br $~lib/util/string/codePointBefore|inlined.0
              end
             end
             local.get $17
             i32.const 63488
             i32.and
             i32.const 55296
             i32.eq
             if (result i32)
              i32.const 65533
             else
              local.get $17
             end
            end
            local.set $17
            local.get $17
            local.set $18
            local.get $18
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 14348
             local.get $18
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $17
             local.set $15
             local.get $15
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 17356
              local.get $15
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             if
              i32.const 1
              local.set $11
             else
              i32.const 0
              br $~lib/util/string/isFinalSigma|inlined.0
             end
            end
            local.get $12
            local.get $17
            i32.const 65536
            i32.ge_s
            i32.const 1
            i32.add
            i32.sub
            local.set $12
            br $while-continue|1
           end
          end
          local.get $11
          i32.eqz
          if
           i32.const 0
           br $~lib/util/string/isFinalSigma|inlined.0
          end
          local.get $9
          i32.const 1
          i32.add
          local.set $12
          local.get $12
          i32.const 30
          i32.add
          local.tee $16
          local.get $8
          local.tee $14
          local.get $16
          local.get $14
          i32.lt_s
          select
          local.set $16
          loop $while-continue|2
           local.get $12
           local.get $16
           i32.lt_s
           local.set $14
           local.get $14
           if
            local.get $10
            local.get $12
            i32.const 1
            i32.shl
            i32.add
            i32.load16_u $0
            local.set $15
            local.get $15
            i32.const 64512
            i32.and
            i32.const 55296
            i32.eq
            local.get $12
            i32.const 1
            i32.add
            local.get $8
            i32.ne
            i32.and
            if
             local.get $10
             local.get $12
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u $0 offset=2
             local.set $18
             local.get $18
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             if
              local.get $15
              i32.const 55296
              i32.sub
              i32.const 10
              i32.shl
              local.get $18
              i32.const 56320
              i32.sub
              i32.add
              i32.const 65536
              i32.add
              local.set $15
             end
            end
            local.get $15
            local.set $18
            local.get $18
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 14348
             local.get $18
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $15
             local.set $18
             local.get $18
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 17356
              local.get $18
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br $~lib/util/string/isFinalSigma|inlined.0
            end
            local.get $12
            local.get $15
            i32.const 65536
            i32.ge_u
            i32.const 1
            i32.add
            i32.add
            local.set $12
            br $while-continue|2
           end
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        if
         i32.const 962
         local.set $7
        end
        local.get $2
        local.get $3
        i32.const 1
        i32.shl
        i32.add
        local.get $7
        i32.store16 $0
       else
        local.get $6
        i32.const 9398
        i32.sub
        i32.const 9423
        i32.const 9398
        i32.sub
        i32.le_u
        if
         local.get $2
         local.get $3
         i32.const 1
         i32.shl
         i32.add
         local.get $6
         i32.const 26
         i32.add
         i32.store16 $0
        else
         local.get $6
         i32.const 0
         call $~lib/util/casemap/casemap
         i32.const 2097151
         i32.and
         local.set $7
         local.get $7
         i32.const 65536
         i32.lt_s
         if
          local.get $2
          local.get $3
          i32.const 1
          i32.shl
          i32.add
          local.get $7
          i32.store16 $0
         else
          local.get $7
          i32.const 65536
          i32.sub
          local.set $7
          local.get $7
          i32.const 10
          i32.shr_u
          i32.const 55296
          i32.or
          local.set $16
          local.get $7
          i32.const 1023
          i32.and
          i32.const 56320
          i32.or
          local.set $13
          local.get $2
          local.get $3
          i32.const 1
          i32.shl
          i32.add
          local.get $16
          local.get $13
          i32.const 16
          i32.shl
          i32.or
          i32.store $0
          local.get $3
          i32.const 1
          i32.add
          local.set $3
         end
        end
       end
      end
     end
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $2
  local.get $3
  i32.const 1
  i32.shl
  call $~lib/rt/itcms/__renew
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 192
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.store16 $0
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#replace (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  call $~lib/string/String#get:length
  local.set $4
  local.get $3
  local.get $4
  i32.le_u
  if
   local.get $3
   local.get $4
   i32.lt_u
   if (result i32)
    local.get $0
   else
    local.get $2
    local.get $0
    local.get $1
    local.get $0
    call $~lib/string/String.__eq
    select
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/string/String#indexOf
  local.set $5
  local.get $5
  i32.const -1
  i32.xor
  if
   local.get $2
   call $~lib/string/String#get:length
   local.set $6
   local.get $3
   local.get $4
   i32.sub
   local.set $3
   local.get $3
   local.get $6
   i32.add
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $8
    i32.store $0
    local.get $8
    local.get $0
    local.get $5
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $8
    local.get $5
    i32.const 1
    i32.shl
    i32.add
    local.get $2
    local.get $6
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $8
    local.get $5
    local.get $6
    i32.add
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    local.get $5
    local.get $4
    i32.add
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $8
    local.set $9
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   end
  end
  local.get $0
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $5
  local.get $3
  local.tee $4
  local.get $5
  local.get $4
  i32.lt_s
  select
  local.set $6
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $5
  local.get $3
  local.tee $4
  local.get $5
  local.get $4
  i32.lt_s
  select
  local.set $7
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $8
  local.get $6
  local.tee $5
  local.get $7
  local.tee $4
  local.get $5
  local.get $4
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $9
  local.get $9
  local.get $8
  i32.sub
  local.set $10
  local.get $10
  i32.eqz
  if
   i32.const 192
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $8
  i32.eqz
  if (result i32)
   local.get $9
   local.get $3
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $11
  i32.store $0
  local.get $11
  local.get $0
  local.get $8
  i32.add
  local.get $10
  memory.copy $0 $0
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/array/Array<u8>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<u8>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 0
  i32.shr_u
  i32.gt_u
  if
   i32.const 832
   i32.const 10928
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 0
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $0
  local.get $5
  call $~lib/array/Array<u8>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<u8>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<u8>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#set:length_
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/as-big/assembly/Big/Big#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
  end
  local.get $0
  local.get $1
  call $~lib/as-big/assembly/Big/Big#set:s
  local.get $0
  local.get $2
  call $~lib/as-big/assembly/Big/Big#set:e
  local.get $0
  local.get $3
  call $~lib/as-big/assembly/Big/Big#set:c
  local.get $0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/util/number/dtoa (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  f64.const 0
  f64.eq
  if
   i32.const 23872
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  local.get $0
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $0
   local.get $0
   f64.ne
   if
    i32.const 1856
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 23904
   i32.const 23952
   local.get $0
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 23984
  local.get $0
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  local.get $2
  i32.const 23984
  local.get $1
  memory.copy $0 $0
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/util/string/joinIntegerArray<u8> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 192
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load8_u $0
   local.set $4
   i32.const 0
   drop
   i32.const 1
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 10
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 10
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store $0
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<u8>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<u8>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 1888
   i32.const 2016
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 624
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $0
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $2
  local.get $2
  if
   i32.const 0
   local.get $0
   i32.sub
   local.set $0
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   local.get $3
   local.get $2
   i32.add
   local.set $7
   local.get $0
   local.set $6
   local.get $4
   local.set $5
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $7
   local.get $6
   local.get $5
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    local.get $3
    local.get $2
    i32.add
    local.set $7
    local.get $0
    local.set $6
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $6
    i64.extend_i32_u
    local.get $5
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.set $4
    local.get $4
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store $0
    local.get $3
    local.get $2
    i32.add
    local.get $4
    i64.extend_i32_u
    local.get $7
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16 $0
  end
  local.get $3
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<u8>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 0
  i32.const 16
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store $0
  local.get $6
  i32.load $0 offset=4
  local.set $7
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 0
  i32.shl
  i32.add
  local.set $8
  i32.const 0
  drop
  local.get $7
  local.get $8
  local.get $3
  i32.const 0
  i32.shl
  memory.copy $0 $0
  local.get $6
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/as-big/assembly/Big/Big#cmp<~lib/as-big/assembly/Big/Big> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load $0 offset=8
  local.tee $3
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.store $0 offset=4
  local.get $0
  i32.load8_s $0
  local.set $5
  local.get $2
  i32.load8_s $0
  local.set $6
  local.get $0
  i32.load $0 offset=4
  local.set $7
  local.get $2
  i32.load $0 offset=4
  local.set $8
  local.get $3
  i32.const 0
  call $~lib/array/Array<u8>#__uget
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $4
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   i32.eqz
  end
  if
   local.get $3
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   i32.eqz
   if (result i32)
    local.get $4
    i32.const 0
    call $~lib/array/Array<u8>#__uget
    i32.eqz
    if (result i32)
     i32.const 0
    else
     i32.const 0
     local.get $6
     i32.sub
    end
   else
    local.get $5
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $5
  local.get $6
  i32.ne
  if
   local.get $5
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $5
  i32.const 0
  i32.lt_s
  local.set $9
  local.get $7
  local.get $8
  i32.ne
  if
   local.get $7
   local.get $8
   i32.gt_s
   local.get $9
   i32.xor
   if (result i32)
    i32.const 1
   else
    i32.const -1
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $3
  call $~lib/array/Array<u8>#get:length
  local.tee $7
  local.get $4
  call $~lib/array/Array<u8>#get:length
  local.tee $8
  i32.lt_s
  if (result i32)
   local.get $7
  else
   local.get $8
  end
  local.set $10
  i32.const -1
  local.set $11
  loop $for-loop|0
   local.get $11
   i32.const 1
   i32.add
   local.tee $11
   local.get $10
   i32.lt_s
   local.set $12
   local.get $12
   if
    local.get $3
    local.get $11
    call $~lib/array/Array<u8>#__uget
    local.get $4
    local.get $11
    call $~lib/array/Array<u8>#__uget
    i32.ne
    if
     local.get $3
     local.get $11
     call $~lib/array/Array<u8>#__uget
     local.get $4
     local.get $11
     call $~lib/array/Array<u8>#__uget
     i32.gt_u
     local.get $9
     i32.xor
     if (result i32)
      i32.const 1
     else
      i32.const -1
     end
     local.set $13
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $13
     return
    end
    br $for-loop|0
   end
  end
  local.get $7
  local.get $8
  i32.eq
  if (result i32)
   i32.const 0
  else
   local.get $7
   local.get $8
   i32.gt_s
   local.get $9
   i32.xor
   if (result i32)
    i32.const 1
   else
    i32.const -1
   end
  end
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/as-big/assembly/Big/Big.zero (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  call $~lib/array/Array<u8>#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/array/Array<u8>#__uset
  i32.const 0
  i32.const 1
  i32.const 0
  local.get $0
  call $~lib/as-big/assembly/Big/Big#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/as-big/assembly/Big/Big#plus<~lib/as-big/assembly/Big/Big> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/as-big/assembly/Big/Big.copyOf
  local.tee $2
  i32.store $0
  local.get $0
  local.set $6
  local.get $6
  i32.load8_s $0
  local.get $2
  i32.load8_s $0
  i32.ne
  if
   local.get $2
   i32.const 0
   local.get $2
   i32.load8_s $0
   i32.sub
   call $~lib/as-big/assembly/Big/Big#set:s
   local.get $6
   local.get $2
   call $~lib/as-big/assembly/Big/Big#minus<~lib/as-big/assembly/Big/Big>
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  local.get $6
  i32.load $0 offset=4
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.load $0 offset=8
  local.tee $8
  i32.store $0 offset=4
  local.get $2
  i32.load $0 offset=4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.store $0 offset=8
  local.get $8
  i32.const 0
  call $~lib/array/Array<u8>#__uget
  i32.eqz
  if (result i32)
   i32.const 1
  else
   local.get $10
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   i32.eqz
  end
  if
   local.get $10
   i32.const 0
   call $~lib/array/Array<u8>#__uget
   i32.eqz
   if
    local.get $8
    i32.const 0
    call $~lib/array/Array<u8>#__uget
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     call $~lib/as-big/assembly/Big/Big.copyOf
     local.tee $2
     i32.store $0
    else
     local.get $2
     local.get $6
     i32.load8_s $0
     call $~lib/as-big/assembly/Big/Big#set:s
    end
   end
   local.get $2
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#slice
  local.tee $8
  i32.store $0 offset=4
  local.get $7
  local.get $9
  i32.sub
  local.tee $3
  if
   local.get $3
   i32.const 0
   i32.gt_s
   if
    local.get $7
    local.set $9
    local.get $10
    local.set $5
   else
    i32.const 0
    local.get $3
    i32.sub
    local.set $3
    local.get $8
    local.set $5
   end
   local.get $5
   call $~lib/array/Array<u8>#reverse
   drop
   loop $for-loop|0
    local.get $3
    local.tee $11
    i32.const 1
    i32.sub
    local.set $3
    local.get $11
    local.set $11
    local.get $11
    if
     local.get $5
     i32.const 0
     call $~lib/array/Array<u8>#push
     drop
     br $for-loop|0
    end
   end
   local.get $5
   call $~lib/array/Array<u8>#reverse
   drop
  end
  local.get $8
  call $~lib/array/Array<u8>#get:length
  local.get $10
  call $~lib/array/Array<u8>#get:length
  i32.sub
  i32.const 0
  i32.lt_s
  if
   local.get $10
   local.set $5
   local.get $8
   local.set $10
   local.get $5
   local.set $8
  end
  local.get $10
  call $~lib/array/Array<u8>#get:length
  local.set $3
  i32.const 0
  local.set $11
  loop $for-loop|2
   local.get $3
   local.set $13
   local.get $13
   if
    local.get $8
    local.tee $14
    local.get $3
    i32.const 1
    i32.sub
    local.tee $3
    local.tee $15
    local.get $8
    local.get $3
    call $~lib/array/Array<u8>#__uget
    local.get $10
    local.get $3
    call $~lib/array/Array<u8>#__uget
    i32.add
    local.get $11
    i32.add
    call $~lib/array/Array<u8>#__uset
    local.get $14
    local.get $15
    call $~lib/array/Array<u8>#__uget
    i32.const 10
    i32.div_u
    i32.const 0
    i32.or
    local.set $11
    local.get $8
    local.get $3
    local.get $8
    local.get $3
    call $~lib/array/Array<u8>#__uget
    i32.const 10
    i32.rem_u
    call $~lib/array/Array<u8>#__uset
    br $for-loop|2
   end
  end
  local.get $11
  i32.const 255
  i32.and
  if
   local.get $8
   local.get $11
   call $~lib/array/Array<u8>#unshift
   drop
   local.get $9
   i32.const 1
   i32.add
   local.set $9
  end
  local.get $8
  call $~lib/array/Array<u8>#get:length
  local.set $3
  loop $for-loop|3
   local.get $8
   local.get $3
   i32.const 1
   i32.sub
   local.tee $3
   call $~lib/array/Array<u8>#__uget
   i32.const 0
   i32.eq
   local.set $13
   local.get $13
   if
    local.get $8
    call $~lib/array/Array<u8>#pop
    drop
    br $for-loop|3
   end
  end
  local.get $2
  local.get $8
  call $~lib/as-big/assembly/Big/Big#set:c
  local.get $2
  local.get $9
  call $~lib/as-big/assembly/Big/Big#set:e
  local.get $2
  local.set $16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $16
 )
 (func $export:node_modules/@as-pect/assembly/assembly/internal/call/__call (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/call/__call
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
)
