name: Unit tests

on:
  push:
  pull_request:
  workflow_call:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: run test
      run: |
        npm ci
        npm run build
        npm run fmt:check
        npm run test:ci
    - id: coverage
      run: |
        value=$(npm run test:ci | grep -oE '^│\s*total\s+\│\s*([0-9.]+)%' | grep -oE '[0-9]+(\.[0-9]+)?%' | cut -d'.' -f1)
        echo "coverage=$value" >> $GITHUB_OUTPUT

    - name: Update README
      uses: actions/github-script@v3
      with:
        script: |
        
          const coverage = parseInt(process.env.COVERAGE);
          const color = coverage >= 80 ? "green" : coverage >= 70 ? "orange" : "red";
        
          const fs = require('fs');
          const content = fs.readFileSync('README.md', 'utf8');
          const lines = content.split('\n');

          const oldCoverage = parseInt(lines[1].match(/coverage-(\d{1,3})%/)?.[1]) || null;

          const shouldUpdateBadge= oldCoverage != coverage || !oldCoverage

          if (shouldUpdateBadge) {
            console.log('updating badge');

            const response = await github.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'README.md',
              ref: context.ref
            });

            lines[1] = `![check-code-coverage](https://img.shields.io/badge/coverage-${coverage}%25-${color})\n`;
            
            await github.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'README.md',
              message: 'Update README',
              content: Buffer.from(lines.join('\n')).toString('base64'),
              sha: response.data.sha,
              branch: context.ref
            });
          }

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERAGE: ${{ steps.coverage.outputs.coverage }}
        COLOR: ${{ steps.coverage.outputs.color }}
